{
  "version": 3,
  "sources": ["../src/dash.ts", "../src/events.ts", "../src/poly.ts", "../src/observe.ts", "../src/roots.ts", "../src/upgrade.ts", "../src/display.ts", "../src/booleans.ts", "../src/html.ts", "../src/render.ts", "../src/mount.ts", "../src/component.ts", "../src/router.ts", "../src/index.ts"],
  "sourcesContent": ["export default function dash(data: string): string {\n    return data.replace(/([a-zA-Z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n", "\nexport const adoptedEvent = new Event('adopted');\nexport const adoptingEvent = new Event('adopting');\n\nexport const upgradedEvent = new Event('upgraded');\nexport const upgradingEvent = new Event('upgrading');\n\nexport const connectedEvent = new Event('connected');\nexport const connectingEvent = new Event('connecting');\n\nexport const attributedEvent = new Event('attributed');\nexport const attributingEvent = new Event('attributing');\n\nexport const disconnectedEvent = new Event('disconnected');\nexport const disconnectingEvent = new Event('disconnecting');\n", "\nexport const replaceChildren = function (element: Element | Document | DocumentFragment, ...nodes: (Node | string)[]): void {\n\n    while (element.lastChild) {\n        element.removeChild(element.lastChild);\n\n    }\n\n    if (nodes?.length) {\n        for (const node of nodes) {\n            element.appendChild(\n                typeof node === 'string' ?\n                (element.ownerDocument as Document).createTextNode(node) :\n                node\n            );\n        }\n    }\n\n};\n\nexport const includes = function (item: string | Array<any>, search: any) {\n    return item.indexOf(search) !== -1;\n};\n\nconst policy = 'trustedTypes' in window ? (window as any).trustedTypes.createPolicy('x-element', { createHTML: (data:string) => data }) : null;\nexport const createHTML = function (data: string) {\n    if (policy) {\n        return policy.createHTML(data);\n    } else {\n        return data;\n    }\n}\n\nexport const hasOwn = function (object:any, key:any) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}", "export type ObserveValue = any;\nexport type ObserveTarget = any;\nexport type ObserveReceiver = any;\nexport type ObserveMethod = () => void;\nexport type ObserveKey = symbol | string;\nexport type ObserveData = Record<string, any>;\n\nconst ObserveCache = new WeakMap();\nconst ObserveNext = Promise.resolve();\n\nconst ObserveSet = function (method: ObserveMethod, target: ObserveTarget, key: ObserveKey, value: ObserveValue, receiver: ObserveReceiver) {\n    if (typeof key === 'symbol') return Reflect.set(target, key, value, receiver);\n\n    const from = Reflect.get(target, key, receiver);\n\n    if (from === value) return true;\n    if (Number.isNaN(from) && Number.isNaN(value)) return true;\n\n    if (from && (from.constructor.name === 'Object' || from.constructor.name === 'Array' || from.constructor.name === 'Function')) {\n        const cache = ObserveCache.get(from);\n        if (cache === value) return true;\n        ObserveCache.delete(from);\n    }\n\n    Reflect.set(target, key, value, receiver);\n\n    ObserveNext.then(method);\n\n    return true;\n};\n\nconst ObserveGet = function (method: ObserveMethod, target: ObserveTarget, key: ObserveKey, receiver: ObserveReceiver): ObserveValue {\n    if (typeof key === 'symbol') return Reflect.get(target, key, receiver);\n\n    const value = Reflect.get(target, key, receiver);\n\n    if (value && (value.constructor.name === 'Object' || value.constructor.name === 'Array')) {\n        const cache = ObserveCache.get(value);\n        if (cache) return cache;\n\n        const proxy = new Proxy(value, {\n            get: ObserveGet.bind(null, method),\n            set: ObserveSet.bind(null, method),\n            deleteProperty: ObserveDelete.bind(null, method),\n        });\n\n        ObserveCache.set(value, proxy);\n        return proxy;\n    }\n\n    if (value && target.constructor.name === 'Object' && (value.constructor.name === 'Function' || value.constructor.name === 'AsyncFunction')) {\n        const cache = ObserveCache.get(value);\n        if (cache) return cache;\n\n        const proxy = new Proxy(value, {\n            apply(t, _, a) {\n                return Reflect.apply(t, receiver, a);\n            },\n        });\n\n        ObserveCache.set(value, proxy);\n        return proxy;\n    }\n\n    return value;\n};\n\nconst ObserveDelete = function (method: ObserveMethod, target: ObserveTarget, key: ObserveKey) {\n    if (typeof key === 'symbol') return Reflect.deleteProperty(target, key);\n\n    const from = Reflect.get(target, key);\n    ObserveCache.delete(from);\n    Reflect.deleteProperty(target, key);\n\n    ObserveNext.then(method);\n\n    return true;\n};\n\nconst Observe = function (data: ObserveData, method: ObserveMethod) {\n    return new Proxy(data, {\n        get: ObserveGet.bind(null, method),\n        set: ObserveSet.bind(null, method),\n        deleteProperty: ObserveDelete.bind(null, method),\n    });\n};\n\nexport default Observe;\n", "\nconst roots = new WeakMap();\n\nexport default roots;", "import { upgradingEvent, upgradedEvent } from './events';\nimport roots from './roots';\n\nexport type UpgradeOptions = {\n    root: Element;\n}\n\nconst upgrade = async function (options: UpgradeOptions) {\n    const instance = roots.get(options.root);\n\n    if (instance.busy) return;\n    else instance.busy = true;\n\n    instance.root.dispatchEvent(upgradingEvent);\n    await instance.state?.upgrading?.()?.catch(console.error);\n\n    const result = instance.template(instance);\n\n    const length = instance.actions.length ?? 0;\n    for (let index = 0; index < length; index++) {\n        const newExpression = result.expressions[index];\n        const oldExpressions = instance.expressions[index];\n        instance.actions[index](oldExpressions, newExpression);\n        instance.expressions[index] = newExpression;\n    }\n\n    // const task = schedule(instance.actions, instance.expressions, result.expressions);\n\n    // instance.expressions.splice(0, -1, ...result.expressions);\n\n    // await task;\n\n    instance.busy = false;\n\n    await instance.state?.upgraded?.()?.catch(console.error);\n    instance.root.dispatchEvent(upgradedEvent);\n};\n\nexport default upgrade;", "\nexport default function display(data: any): string {\n    switch (typeof data) {\n        case 'undefined':\n            return '';\n        case 'string':\n            return data;\n        case 'number':\n            return `${data}`;\n        case 'bigint':\n            return `${data}`;\n        case 'boolean':\n            return `${data}`;\n        case 'function':\n            return `${data()}`;\n        case 'symbol':\n            return String(data);\n        case 'object':\n            return JSON.stringify(data);\n        default:\n            throw new Error('display - type not handled');\n    }\n}\n", "const booleans = [\n    'allowfullscreen',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'compact',\n    'controls',\n    'declare',\n    'default',\n    'defaultchecked',\n    'defaultmuted',\n    'defaultselected',\n    'defer',\n    'disabled',\n    'draggable',\n    'enabled',\n    'formnovalidate',\n    'indeterminate',\n    'inert',\n    'ismap',\n    'itemstate',\n    'loop',\n    'multiple',\n    'muted',\n    'nohref',\n    'noshade',\n    'hidden',\n    'novalidate',\n    'nowrap',\n    'open',\n    'pauseonexit',\n    'readonly',\n    'required',\n    'reversed',\n    'stated',\n    'seamless',\n    'selected',\n    'sortable',\n    'spellcheck',\n    'translate',\n    'truespeed',\n    'typemustmatch',\n    'visible',\n];\n\nexport default booleans;\n", "import { createHTML } from './poly';\n// import parse from './parse';\n\nexport type TemplateExpressionsArray = any[];\n\nexport type HtmlInstance = {\n    strings: TemplateStringsArray;\n    expressions:TemplateExpressionsArray;\n    template: HTMLTemplateElement;\n    symbol: typeof HtmlSymbol;\n}\n\nexport const HtmlCache = new WeakMap();\nexport const HtmlSymbol = Symbol('html');\n\n// export class H {\n//     strings:TemplateStringsArray;\n//     expressions:TemplateExpressionsArray;\n//     template: HTMLTemplateElement;\n//     constructor(strings: TemplateStringsArray, expressions: TemplateExpressionsArray, template: HTMLTemplateElement) {\n//         this.strings = strings;\n//         this.expressions = expressions;\n//         this.template = template;\n//     }\n// }\n\nexport const html = function (strings: TemplateStringsArray, ...expressions: TemplateExpressionsArray): HtmlInstance {\n    const template = HtmlCache.get(strings);\n    if (template) {\n        // return new H(strings, expressions, template);\n        return { strings, expressions, template, symbol: HtmlSymbol };\n    } else {\n        let data = '';\n\n        const length = strings.length - 1;\n\n        for (let index = 0; index < length; index++) {\n            data += `${strings[index]}{{${index}}}`;\n        }\n\n        data += strings[length];\n\n        const template = document.createElement('template');\n        template.innerHTML = createHTML(data);\n\n        // const template = parse(data);\n\n        HtmlCache.set(strings, template);\n\n        // return new H(strings, expressions, template);\n        return { strings, expressions, template, symbol: HtmlSymbol };\n    }\n}\n\nexport default html;", "import display from './display';\nimport booleans from './booleans';\nimport { HtmlSymbol } from './html';\nimport { includes } from './poly';\n\nexport type Value = any;\nexport type OldValue = Value;\nexport type NewValue = Value;\nexport type Expressions = Array<Value>;\nexport type Actions = Array<(oldValue: OldValue, newValue: NewValue) => void>;\nexport type Attribute = { name: string, value: string };\n\nconst filter = NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_TEXT;\n\nconst links= [ 'src', 'href', 'xlink:href' ];\nconst safePattern = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i;\n\nconst dangerousLink = function (data: string) {\n    return typeof data !== 'string' || !safePattern.test(data);\n};\n\nconst ObjectAction = function (start: Text, end: Text, actions: Actions, oldValue: OldValue, newValue: NewValue) {\n    // console.log('Object Action');\n\n    oldValue = oldValue ?? {};\n    newValue = newValue ?? {};\n\n    if (oldValue?.strings !== newValue.strings) {\n\n        let next;\n        let node = end.previousSibling;\n        while (node !== start) {\n            next = node?.previousSibling as ChildNode;\n            node?.parentNode?.removeChild(node);\n            node = next;\n        }\n\n        const fragment = newValue.template.content.cloneNode(true);\n        Render(fragment, newValue.expressions, actions);\n        document.adoptNode(fragment);\n\n        const l = actions.length;\n        for (let i = 0; i < l; i++) {\n            actions[i](oldValue.expressions?.[i], newValue.expressions[i]);\n        }\n\n        end.parentNode?.insertBefore(fragment, end);\n    } else {\n        const l = actions.length;\n        for (let i = 0; i < l; i++) {\n            actions[i](oldValue.expressions?.[i], newValue.expressions[i]);\n        }\n    }\n};\n\nconst ArrayAction = function (start: Text, end: Text, actions: Actions, oldValue: OldValue, newValue: NewValue) {\n    // console.log('Array Action', actions);\n\n    oldValue = oldValue ?? [];\n    newValue = newValue ?? [];\n\n    const oldLength = oldValue.length;\n    const newLength = newValue.length;\n    const common = Math.min(oldLength, newLength);\n\n    for (let i = 0; i < common; i++) {\n        actions[i](oldValue[i], newValue[i]);\n    }\n\n    if (oldLength < newLength) {\n        const template = document.createElement('template');\n\n        for (let i = oldLength; i < newLength; i++) {\n\n            if (newValue[i]?.constructor === Object && newValue[i]?.symbol === HtmlSymbol) {\n                const start = document.createTextNode('');\n                const end = document.createTextNode('');\n                const action = ObjectAction.bind(null, start, end, []);\n\n                template.content.appendChild(start);\n                template.content.appendChild(end);\n                actions.push(action);\n\n                action(oldValue[i], newValue[i]);\n            } else {\n                const node = document.createTextNode('');\n                const action = StandardAction.bind(null, node as Text);\n\n                template.content.appendChild(node);\n                actions.push(action);\n\n                action(oldValue[i], newValue[i]);\n            }\n\n        }\n\n        end.parentNode?.insertBefore(template.content as Node, end);\n    } else if (oldLength > newLength) {\n\n        for (let i = oldLength-1; i > newLength-1; i--) {\n\n            if (oldValue[i]?.constructor === Object && oldValue[i]?.symbol === HtmlSymbol) {\n                const { template } = oldValue[i];\n                let removes = template.content.childNodes.length + 2;\n                while (removes--) end.parentNode?.removeChild(end.previousSibling as Node);\n            } else {\n                end.parentNode?.removeChild(end.previousSibling as Node);\n            }\n\n        }\n\n        actions.length = newLength;\n    }\n};\n\nconst StandardAction = function (node: Text, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    node.textContent = newValue;\n};\n\nconst AttributeOn = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    if (typeof oldValue === 'function') element.removeEventListener(attribute.name.slice(2), oldValue);\n    if (typeof newValue !== 'function') return console.warn(`XElement - attribute name \"${attribute.name}\" and value \"${newValue}\" not allowed`);\n    element.addEventListener(attribute.name.slice(2), newValue);\n};\n\nconst AttributeBoolean = function (element: Element, attribute: { name: string; value: any }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n\n    const value = newValue ? true : false;\n    if (value) element.setAttribute(attribute.name, '');\n    else element.removeAttribute(attribute.name);\n\n    attribute.value = value;\n    Reflect.set(element, attribute.name, attribute.value);\n};\n\nconst AttributeValue = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    const value = display(newValue);\n    attribute.value = value;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeLink = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n\n    const value = encodeURI(newValue);\n\n    if (dangerousLink(value)) {\n        element.removeAttribute(attribute.name);\n        console.warn(`XElement - attribute name \"${attribute.name}\" and value \"${value}\" not allowed`);\n        return;\n    }\n\n    attribute.value = value;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeStandard = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    attribute.value = newValue;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeName = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    element.removeAttribute(oldValue);\n\n    const name = newValue?.toLowerCase();\n\n    if (name === 'value') {\n        attribute.name = name;\n        AttributeValue(element, attribute, attribute.value, attribute.value);\n    } else if (name.startsWith('on')) {\n        console.warn(`XElement - dynamic attribute name \"${newValue}\" not allowed`);\n    } else if (includes(links, name)) {\n        console.warn(`XElement - dynamic attribute name \"${newValue}\" not allowed`);\n    } else if (includes(booleans, name)) {\n        attribute.name = name;\n        AttributeBoolean(element, attribute, attribute.value, attribute.value);\n    } else {\n        attribute.name = name;\n        AttributeStandard(element, attribute, attribute.value, attribute.value);\n    }\n\n};\n\nexport const Render = function (fragment: DocumentFragment, expressions: Expressions, actions: Actions) {\n    const walker = document.createTreeWalker(document, filter, null);\n\n    walker.currentNode = fragment;\n\n    let index = 0;\n    let node: Node | null = fragment.firstChild;\n\n    while ((node = walker.nextNode()) !== null) {\n        if (node.nodeType === Node.TEXT_NODE) {\n\n            const start = node.nodeValue?.indexOf('{{') ?? -1;\n\n            if (start == -1) continue;\n\n            if (start != 0) {\n                (node as Text).splitText(start);\n                node = walker.nextNode() as Node;\n            }\n\n            const end = node.nodeValue?.indexOf('}}') ?? -1;\n\n            if (end == -1) continue;\n\n            if (end + 2 != node.nodeValue?.length) {\n                (node as Text).splitText(end + 2);\n            }\n\n            const newValue = expressions[index++];\n\n            if (newValue?.constructor === Object && newValue?.symbol === HtmlSymbol) {\n                const start = document.createTextNode('');\n                const end = node;\n                end.nodeValue = '';\n                end.parentNode?.insertBefore(start, end);\n                actions.push(ObjectAction.bind(null, start as Text, end as Text, []));\n            } else if (newValue?.constructor === Array) {\n                const start = document.createTextNode('');\n                const end = node;\n                end.nodeValue = '';\n                end.parentNode?.insertBefore(start, end);\n                actions.push(ArrayAction.bind(null, start as Text, end as Text, []));\n            } else {\n                (node as Text).textContent = '';\n                actions.push(StandardAction.bind(null, node as Text));\n            }\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n\n            if (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE') {\n                walker.nextSibling();\n            }\n\n            const names = (node as Element).getAttributeNames();\n            for (const name of names) {\n                const value = (node as Element).getAttribute(name) ?? '';\n                const attribute = { name, value };\n\n                const dynamicName = name.includes('{{') && name.includes('}}');\n                const dynamicValue = value.includes('{{') && value.includes('}}');\n\n                if (dynamicName) {\n                    index++;\n                    (node as Element).removeAttribute(name);\n                    actions.push(\n                        AttributeName.bind(null, node as Element, attribute),\n                    );\n                }\n\n                if (dynamicValue) {\n                    index++;\n                    (node as Element).removeAttribute(name);\n                    if (name === 'value') {\n                        actions.push(\n                            AttributeValue.bind(null, node as Element, attribute),\n                        );\n                    } else if (name.startsWith('on')) {\n                        actions.push(\n                            AttributeOn.bind(null, node as Element, attribute),\n                        );\n                    } else if (includes(links, name)) {\n                        actions.push(\n                            AttributeLink.bind(null, node as Element, attribute),\n                        );\n                    } else if (includes(booleans, name)) {\n                        actions.push(\n                            AttributeBoolean.bind(null, node as Element, attribute),\n                        );\n                    } else {\n                        actions.push(\n                            AttributeStandard.bind(null, node as Element, attribute),\n                        );\n                    }\n                }\n\n                if (!dynamicName && !dynamicValue) {\n                    if (includes(links, name)) {\n                        if (dangerousLink(value)) {\n                            (node as Element).removeAttribute(name);\n                            console.warn(`XElement - attribute name \"${name}\" and value \"${value}\" not allowed`);\n                        }\n                    } else if (name.startsWith('on')) {\n                        (node as Element).removeAttribute(name);\n                        console.warn(`XElement - attribute name \"${name}\" not allowed`);\n                    }\n                }\n\n            }\n        } else {\n            console.warn(`XElement - node type \"${node.nodeType}\" not handled`);\n        }\n    }\n};\n\nexport default Render;\n", "import { connectingEvent, connectedEvent, upgradingEvent, upgradedEvent } from './events';\nimport { replaceChildren } from './poly';\nimport observe from './observe';\nimport upgrade from './upgrade';\nimport render from './render';\nimport roots from './roots';\nimport html from './html';\n\n// type state = (instance:Instance) => any;\n// type Content = (instance:Instance) => any;\n\n// type Instance = {\n//     html: typeof html;\n//     busy: boolean;\n//     actions: Array<any>;\n//     expressions: Array<any>;\n//     root: Element,\n//     state?: Record<any,any>\n//     content: Content;\n// }\n\ntype Options = {\n    root: Element;\n    state?: (instance:any) => any;\n    template: (instance:any) => any;\n}\n\nconst mount = async function (options: Options) {\n    console.log(options);\n\n    // const source = roots.get(root);\n    // call disconnect\n\n    // if (root.mounted) return;\n    // else root.mounted = true;\n\n    const instance:any = {\n        html,\n        busy: true,\n        actions: [],\n        expressions: [],\n        template: options.template,\n        root: options.root,\n        state: undefined,\n        get s () { return this.state; },\n        get r () { return this.root; },\n        get h () { return this.html; },\n        get t () { return this.template },\n    };\n\n    if (options.state) {\n        instance.state = observe(options.state(instance), () => upgrade(instance));\n    }\n\n    roots.set(instance.root, instance);\n\n    instance.root.dispatchEvent(connectingEvent);\n    await instance.state?.connecting?.();\n\n    instance.root.dispatchEvent(upgradingEvent);\n    await instance.state?.upgrading?.()?.catch(console.error);\n\n    const result = instance.template(instance);\n\n    // root.expressions.splice(0, -1, ...result.values);\n    // root.fragment = result.template.content.cloneNode(true);\n    const fragment = result.template.content.cloneNode(true);\n\n    render(fragment, result.expressions, instance.actions);\n    // render(root.fragment, result.expressions, root.actions);\n    // render(root.fragment, root.expressions, root.actions);\n\n    document.adoptNode(fragment);\n    // document.adoptNode(root.fragment);\n\n    const length = instance.actions.length;\n    for (let index = 0; index < length; index++) {\n        const newExpression = result.expressions[index];\n        instance.actions[index](undefined, newExpression);\n        instance.expressions[index] = newExpression;\n    }\n\n    // const task = schedule(root.actions, Array(root.actions.length).fill(undefined), root.expressions);\n    // await task;\n\n    replaceChildren(instance.root?.shadowRoot ?? instance.root, fragment);\n\n    instance.busy = false;\n\n    await instance.state?.upgraded?.()?.catch(console.error);\n    instance.root.dispatchEvent(upgradedEvent);\n\n    await instance.state?.connected?.();\n    instance.root.dispatchEvent(connectedEvent);\n};\n\nexport default mount;", "import dash from './dash';\nimport { HtmlInstance } from './html';\nimport mount from './mount';\nimport roots from './roots';\n\nimport {\n    connectedEvent,\n    connectingEvent,\n    disconnectedEvent,\n    disconnectingEvent,\n} from './events';\n\ninterface ComponentInstance extends HTMLElement {\n\n    // adopted?:any;\n    // adopting?:any;\n    adoptedCallback?:any;\n\n    upgraded?:any;\n    upgrading?:any;\n    upgradedCallback?:any;\n\n    connected?:any;\n    connecting?:any;\n    connectedCallback?:any;\n\n    disconnected?:any;\n    disconnecting?:any;\n    disconnectedCallback?:any;\n\n    // attributed?:any;\n    // attributing?:any;\n    attributeChangedCallback?:any;\n\n    template: () => HtmlInstance;\n}\n\ninterface ComponentConstructor {\n\n    tag?: string;\n    define?: boolean;\n    shadow?: boolean;\n    observedProperties?: string[];\n\n    new (): ComponentInstance;\n}\n\n// const DEFINED = new WeakSet();\n// const CE = window.customElements;\n// Object.defineProperty(window, 'customElements', {\n//     get: () => ({\n//         define(name: string, constructor: CustomElementConstructor, options?: ElementDefinitionOptions) {\n//             if (constructor.prototype instanceof Component && !DEFINED.has(constructor)) {\n//                 constructor = new Proxy(constructor, {\n//                     construct(target, args, extender) {\n//                         const instance = Reflect.construct(target, args, extender);\n//                             mount(instance);\n//                         return instance;\n//                     },\n//                 });\n\n//                 DEFINED.add(constructor);\n//             }\n//             CE.define(name, constructor, options);\n//         },\n//         get: CE.get,\n//         whenDefined: CE.whenDefined,\n//     }),\n// });\n\n// const create = async function (this:ComponentConstructor) {\n//     const tag = this.tag ?? dash(this.name);\n\n//     if (!customElements.get(tag)) {\n//         customElements.define(tag, this);\n//     }\n\n//     const element = document.createElement(tag) as ComponentInstance;\n//     // await mount(element);\n\n//     return element;\n// };\n\n// const defined = async function (this:ComponentConstructor) {\n//     const tag = this.tag ?? dash(this.name);\n//     return customElements.whenDefined(tag);\n// };\n\nconst construct = function (self:ComponentInstance) {\n    const constructor = self.constructor as ComponentConstructor;\n\n    const shadow = constructor.shadow || false;\n    // const define = constructor.define || false;\n    // const tag = constructor.tag ?? dash(constructor.name);\n\n    if (shadow && !self.shadowRoot) {\n        self.attachShadow({ mode: 'open' });\n    }\n\n    // const observedProperties = constructor.observedProperties;\n    // const prototype = Object.getPrototypeOf(self);\n\n    // const properties = observedProperties ?\n    //     observedProperties ?? [] :\n    //     [ ...Object.getOwnPropertyNames(self),\n    //         ...Object.getOwnPropertyNames(prototype) ];\n\n    // for (const property of properties) {\n\n    //     if (\n    //         'attributeChangedCallback' === property ||\n    //         'attributing' === property ||\n    //         'attributed' === property ||\n\n    //         'adoptedCallback' === property ||\n    //         'adopting' === property ||\n    //         'adopted' === property ||\n\n    //         'disconnectedCallback' === property ||\n    //         'disconnecting' === property ||\n    //         'disconnected' === property ||\n\n    //         'connectedCallback' === property ||\n    //         'connecting' === property ||\n    //         'connected' === property ||\n\n    //         'upgradedCallback' === property ||\n    //         'upgrading' === property ||\n    //         'upgraded' === property ||\n\n    //         'constructor' === property ||\n    //         'template' === property\n    //     ) continue;\n\n    //     const descriptor = Object.getOwnPropertyDescriptor(self, property) ?? Object.getOwnPropertyDescriptor(prototype, property);\n\n    //     if (!descriptor) continue;\n    //     if (!descriptor.configurable) continue;\n\n        // Object.defineProperty(instance.state, property, { ...descriptor, enumerable: false });\n\n        // Object.defineProperty(self, property, {\n        //     enumerable: descriptor.enumerable,\n        //     configurable: descriptor.configurable,\n        //     get() {\n        //         return instance.observed[property];\n        //     },\n        //     set(value) {\n        //         instance.observed[property] = value;\n        //         // upgrade(self);\n        //     }\n        // });\n\n    // }\n\n    return self;\n};\n\nexport default function component (Class:ComponentConstructor):ComponentConstructor {\n\n    const define = Class.define ?? false;\n    const tag = Class.tag ?? dash(Class.name);\n    // const upgradedCallback = Class.prototype.upgradedCallback;\n    const connectedCallback = Class.prototype.connectedCallback;\n    const disconnectedCallback = Class.prototype.disconnectedCallback;\n\n    // Class.prototype.upgradedCallback = async function () {\n    //     this.dispatchEvent(upgradingEvent);\n    //     await this.upgrading?.();\n    //     await this.upgraded?.();\n    //     this.dispatchEvent(upgradedEvent);\n    //     await upgradedCallback?.();\n    // };\n\n    Class.prototype.connectedCallback = async function () {\n        // this.dispatchEvent(connectingEvent);\n        // await this.connecting?.();\n        // // await mount(this);\n        // await this.connected?.();\n        // this.dispatchEvent(connectedEvent);\n\n        if (this.mounted) {\n            const instance = roots.get(this);\n            instance.root.dispatchEvent(connectingEvent);\n            await instance.state.connecting?.();\n            await instance.state.connected?.();\n            instance.root.dispatchEvent(connectedEvent);\n        } else {\n            console.log(this);\n            this.mounted = true;\n            await mount({ root: this, state: this.state, template: this.template });\n        }\n\n        await connectedCallback?.();\n    };\n\n    Class.prototype.disconnectedCallback = async function () {\n        const instance = roots.get(this);\n        instance.root.dispatchEvent(disconnectingEvent);\n        await instance.state.disconnecting?.();\n        await instance.state.disconnected?.();\n        instance.root.dispatchEvent(disconnectedEvent);\n        await disconnectedCallback?.();\n    };\n\n    const Wrap = new Proxy(Class, {\n        // get, set,\n        construct(t, a, e) {\n            return construct(Reflect.construct(t, a, e));\n        }\n    });\n\n    // const Wrap = class extends Class {\n    //     constructor() {\n    //         super();\n    //         construct(this);\n    //     }\n    // };\n\n    if (define) {\n        if (!customElements.get(tag)) {\n            customElements.define(tag, Wrap as any);\n        }\n    }\n\n    return Wrap;\n};\n", "import { replaceChildren  } from './poly';\nimport mount from './mount';\n\ntype Module = { default: CustomElementConstructor }\ntype Handler = () => Module | CustomElementConstructor | Promise<CustomElementConstructor | Module>;\n\ntype Route = {\n    path: string;\n    instance: any;\n    handler: Handler;\n    root: Element;\n};\n\nconst alls: Array<Route> = [];\nconst routes: Array<Route> = [];\n\nconst notModule = function (module:any) {\n    return (!Object.keys(module).length) || (!!module.default && typeof module.default === 'object' && !Object.keys(module.default).length);\n};\n\nconst transition = async function (route: Route) {\n    if (route.instance) {\n        replaceChildren(route.root, route.instance);\n    } else {\n        const tag = 'x-' + (route.path.replace(/\\/+/g,'-').replace(/^-|-$|\\.*/g, '') || 'root');\n        const result = await route.handler() as any;\n        const data = notModule(result) ? result : result?.default ?? result;\n\n        if (data?.prototype instanceof HTMLElement) {\n            if (!customElements.get(tag)) {\n                customElements.define(tag, data);\n            }\n            route.instance = document.createElement(tag);\n            replaceChildren(route.root, route.instance);\n        } else {\n            const options:any = { root: route.root };\n            if (data.state) options.state = data.state;\n            if (data.content) options.content = data.content;\n            else options.content = data;\n            await mount(options);\n        }\n    }\n};\n\nconst navigate = function (event?: any) {\n    if (event && 'canIntercept' in event && event.canIntercept === false) return;\n    if (event && 'canTransition' in event && event.canTransition === false) return;\n\n    const destination = new URL(event?.destination.url ?? location.href);\n    const base = new URL(document.querySelector('base')?.href ?? location.origin);\n\n    base.hash = '';\n    base.search = '';\n    destination.hash = '';\n    destination.search = '';\n\n    const pathname = destination.href.replace(base.href, '/');\n    const transitions: Array<Route> = [];\n\n    for (const route of routes) {\n        if (route.path !== pathname) continue;\n        transitions.push(route);\n    }\n\n    for (const all of alls) {\n        let has = false;\n\n        for (const transition of transitions) {\n            if (transition.root === all.root) {\n                has = true;\n                break;\n            }\n        }\n\n        if (has) continue;\n\n        transitions.push(all);\n    }\n\n    if (event?.intercept) {\n        return event.intercept({ handler: () => transitions.map((route) => transition(route)) });\n    } else if (event?.transitionWhile) {\n        return event.transitionWhile(transitions.map((route) => transition(route)));\n    } else {\n        transitions.map((route) => transition(route));\n    }\n};\n\nconst router = function (path: string, root: Element, handler: Handler) {\n    if (!path) throw new Error('XElement - router path required');\n    if (!handler) throw new Error('XElement - router handler required');\n    if (!root) throw new Error('XElement - router root required');\n\n    if (path === '/*') {\n        for (const all of alls) {\n            if (all.path === path && all.root === root) {\n                throw new Error('XElement - router duplicate path on root');\n            }\n        }\n\n        alls.push({ path, root, handler, instance: undefined });\n    } else {\n        for (const route of routes) {\n            if (route.path === path && route.root === root) {\n                throw new Error('XElement - router duplicate path on root');\n            }\n        }\n\n        routes.push({ path, root, handler, instance: undefined });\n    }\n\n    Reflect.get(window, 'navigation').addEventListener('navigate', navigate);\n};\n\nexport default router;\n", "import Component from './component';\n// import Schedule from './schedule';\n// import state from './state';\n// import Define from './define';\nimport Router from './router';\nimport Render from './render';\n// import Patch from './patch';\n// import Mount from './mount';\nimport html from './html';\n\nexport { Component };\nexport { Component as component };\n\n// export { Schedule };\n// export { Schedule as schedule };\n\n// export { state };\n// export { state as state };\n\n// export { Define };\n// export { Define as define };\n\nexport { Router };\nexport { Router as router };\n\nexport { Render };\nexport { Render as render };\n\n// export { Patch };\n// export { Patch as patch };\n\n// export { Mount };\n// export { Mount as mount };\n\nexport { html };\n\nconst Index = {\n    Component,\n    // Schedule,\n    // state,\n    // Define,\n    Router,\n    Render,\n    // Patch,\n    // Mount,\n    component: Component,\n    // schedule: Schedule,\n    // state: state,\n    // define: Define,\n    router: Router,\n    render: Render,\n    // patch: Patch,\n    // mount: Mount,\n    html\n};\n\nexport default Index;\n"],
  "mappings": "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",
  "names": ["template", "start", "end", "_a", "_b", "transition"]
}
