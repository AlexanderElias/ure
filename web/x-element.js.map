{
  "version": 3,
  "sources": ["../src/define.ts", "../src/display.ts", "../src/booleans.ts", "../src/poly.ts", "../src/html.ts", "../src/render.ts", "../src/context.ts", "../src/dash.ts", "../src/events.ts", "../src/component.ts", "../src/router.ts", "../src/index.ts"],
  "sourcesContent": ["import dash from './dash';\n\nexport default function define(name: string, constructor: CustomElementConstructor) {\n    if (!customElements.get(name)) {\n        customElements.define(name, constructor);\n    }\n}", "\nexport default function display(data: any): string {\n    switch (typeof data) {\n        case 'undefined':\n            return '';\n        case 'string':\n            return data;\n        case 'number':\n            return `${data}`;\n        case 'bigint':\n            return `${data}`;\n        case 'boolean':\n            return `${data}`;\n        case 'function':\n            return `${data()}`;\n        case 'symbol':\n            return String(data);\n        case 'object':\n            return JSON.stringify(data);\n        default:\n            throw new Error('display - type not handled');\n    }\n}\n", "const booleans = [\n    'allowfullscreen',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'compact',\n    'controls',\n    'declare',\n    'default',\n    'defaultchecked',\n    'defaultmuted',\n    'defaultselected',\n    'defer',\n    'disabled',\n    'draggable',\n    'enabled',\n    'formnovalidate',\n    'indeterminate',\n    'inert',\n    'ismap',\n    'itemstate',\n    'loop',\n    'multiple',\n    'muted',\n    'nohref',\n    'noshade',\n    'hidden',\n    'novalidate',\n    'nowrap',\n    'open',\n    'pauseonexit',\n    'readonly',\n    'required',\n    'reversed',\n    'stated',\n    'seamless',\n    'selected',\n    'sortable',\n    'spellcheck',\n    'translate',\n    'truespeed',\n    'typemustmatch',\n    'visible',\n];\n\nexport default booleans;\n", "\nexport const replaceChildren = function (element: Element | Document | DocumentFragment, ...nodes: (Node | string)[]): void {\n\n    while (element.lastChild) {\n        element.removeChild(element.lastChild);\n\n    }\n\n    if (nodes?.length) {\n        for (const node of nodes) {\n            element.appendChild(\n                typeof node === 'string' ?\n                (element.ownerDocument as Document).createTextNode(node) :\n                node\n            );\n        }\n    }\n\n};\n\nexport const includes = function (item: string | Array<any>, search: any) {\n    return item.indexOf(search) !== -1;\n};\n\nconst policy = 'trustedTypes' in window ? (window as any).trustedTypes.createPolicy('x-element', { createHTML: (data:string) => data }) : null;\nexport const createHTML = function (data: string) {\n    if (policy) {\n        return policy.createHTML(data);\n    } else {\n        return data;\n    }\n}\n\nexport const hasOwn = function (object:any, key:any) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}", "import { createHTML } from './poly';\nimport render from './render';\nimport { Expressions, HTML } from './types';\n// import parse from './parse';\n\nexport const symbol = Symbol('html');\nconst cache: WeakMap<TemplateStringsArray, HTMLTemplateElement> = new WeakMap();\n// const Templates: WeakMap<TemplateStringsArray, HTMLTemplateElement> = new WeakMap();\n// const Actions: WeakMap<DocumentFragment, any[]> = new WeakMap();\n// const Expressions: WeakMap<DocumentFragment, any[]> = new WeakMap();\n\n// class Html {\n//     template: HTMLTemplateElement;\n//     expressions: TemplateExpressionsArray;\n//     constructor(template: HTMLTemplateElement, expressions: TemplateExpressionsArray) {\n//         this.template = template;\n//         this.expressions = expressions;\n//     }\n// }\n\nexport default function html(strings: TemplateStringsArray, ...expressions: Expressions): HTML {\n    const template = cache.get(strings);\n    if (template) {\n        // console.log(expressions)\n\n        // const length = cache.actions.length ?? 0;\n        // for (let index = 0; index < length; index++) {\n        //     const newExpression = expressions[index];\n        //     const oldExpressions = cache.expressions[index];\n        //     cache.actions[index](oldExpressions, newExpression);\n        //     cache.expressions[index] = newExpression;\n        // }\n\n        // return cache.fragment;\n        return { strings, template, expressions, symbol };\n    } else {\n        let data = '';\n\n        const length = strings.length - 1;\n\n        for (let index = 0; index < length; index++) {\n            data += `${strings[index]}{{${index}}}`;\n        }\n\n        data += strings[length];\n\n        const template = document.createElement('template');\n        template.innerHTML = createHTML(data);\n\n        cache.set(strings, template);\n\n        return { strings, template, expressions, symbol };\n\n        // const fragment = template.content.cloneNode(true) as DocumentFragment;\n        // const expressions = [];\n        // Expressions.set(fragment, expressions);\n\n        // const actions: any = [];\n        // Actions.set(fragment, actions);\n\n        // render(fragment, expressions, actions);\n        // document.adoptNode(fragment);\n\n        // for (let index = 0; index < actions.length; index++) {\n        //     const newExpression = expressions[index];\n        //     actions[index](undefined, newExpression);\n        // }\n\n        // return fragment;\n\n        // const cache = {\n        // expressions,\n        // actions: [] as TemplateActionsArray,\n        // template: document.createElement('template')\n        // fragment: template.content.cloneNode(true) as DocumentFragment\n        // };\n\n        // cache.template.innerHTML = createHTML(data);\n\n        // Cache.set(strings, cache);\n\n        // render(cache.fragment, cache.expressions, cache.actions);\n        // document.adoptNode(cache.fragment);\n\n        // for (let index = 0; index < cache.actions.length; index++) {\n        //     const newExpression = cache.expressions[index];\n        //     cache.actions[index](undefined, newExpression);\n        // }\n\n        // return cache.fragment;\n    }\n}\n", "import display from './display';\nimport booleans from './booleans';\nimport { symbol } from './html';\nimport { includes } from './poly';\nimport { Attribute, Expressions, Actions, OldValue, NewValue } from './types';\n\n// export type Value = any;\n// export type OldValue = Value;\n// export type NewValue = Value;\n// export type Expressions = Array<Value>;\n// export type Actions = Array<(oldValue: OldValue, newValue: NewValue) => void>;\n// export type Attribute = { name: string, value: string };\n\nconst filter = NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_TEXT;\n\nconst links = ['src', 'href', 'xlink:href'];\nconst safePattern = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i;\n\nconst dangerousLink = function (data: string) {\n    return typeof data !== 'string' || !safePattern.test(data);\n};\n\nconst ObjectAction = function (start: Text, end: Text, actions: Actions, oldValue: OldValue, newValue: NewValue) {\n\n    oldValue = oldValue ?? {};\n    newValue = newValue ?? {};\n\n    if (oldValue?.strings !== newValue.strings) {\n\n        let next;\n        let node = end.previousSibling;\n        while (node !== start) {\n            next = node?.previousSibling as ChildNode;\n            node?.parentNode?.removeChild(node);\n            node = next;\n        }\n\n        const fragment = newValue.template.content.cloneNode(true);\n        Render(fragment, newValue.expressions, actions);\n        document.adoptNode(fragment);\n\n        const l = actions.length;\n        for (let i = 0; i < l; i++) {\n            actions[i](oldValue.expressions?.[i], newValue.expressions[i]);\n        }\n\n        end.parentNode?.insertBefore(fragment, end);\n    } else {\n        const l = actions.length;\n        for (let i = 0; i < l; i++) {\n            actions[i](oldValue.expressions?.[i], newValue.expressions[i]);\n        }\n    }\n};\n\nconst ArrayAction = function (start: Text, end: Text, actions: Actions, oldValue: OldValue, newValue: NewValue) {\n\n    oldValue = oldValue ?? [];\n    newValue = newValue ?? [];\n\n    const oldLength = oldValue.length;\n    const newLength = newValue.length;\n    const common = Math.min(oldLength, newLength);\n\n    for (let i = 0; i < common; i++) {\n        actions[i](oldValue[i], newValue[i]);\n    }\n\n    if (oldLength < newLength) {\n        const template = document.createElement('template');\n\n        for (let i = oldLength; i < newLength; i++) {\n\n            if (newValue[i]?.constructor === Object && newValue[i]?.symbol === symbol) {\n                const start = document.createTextNode('');\n                const end = document.createTextNode('');\n                const action = ObjectAction.bind(null, start, end, []);\n\n                template.content.appendChild(start);\n                template.content.appendChild(end);\n\n                actions.push(action);\n\n                action(oldValue[i], newValue[i]);\n            } else {\n                const node = document.createTextNode('');\n                const action = StandardAction.bind(null, node as Text);\n\n                template.content.appendChild(node);\n                actions.push(action);\n\n                action(oldValue[i], newValue[i]);\n            }\n\n        }\n\n        end.parentNode?.insertBefore(template.content as Node, end);\n    } else if (oldLength > newLength) {\n\n        for (let i = oldLength - 1; i > newLength - 1; i--) {\n\n            // if (oldValue[i]?.constructor === Object && oldValue[i]?.symbol === symbol) {\n            //     const { template } = oldValue[i];\n            //     let removes = template.content.childNodes.length + 2;\n            //     while (removes--) end.parentNode?.removeChild(end.previousSibling as Node);\n            // } else {\n            end.parentNode?.removeChild(end.previousSibling as Node);\n            // }\n\n        }\n\n        actions.length = newLength;\n    }\n};\n\nconst StandardAction = function (node: Text, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    node.textContent = newValue;\n};\n\nconst AttributeOn = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    if (typeof oldValue === 'function') element.removeEventListener(attribute.name.slice(2), oldValue);\n    if (typeof newValue !== 'function') return console.warn(`XElement - attribute name \"${attribute.name}\" and value \"${newValue}\" not allowed`);\n    element.addEventListener(attribute.name.slice(2), newValue);\n};\n\nconst AttributeBoolean = function (element: Element, attribute: { name: string; value: any }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n\n    const value = newValue ? true : false;\n    if (value) element.setAttribute(attribute.name, '');\n    else element.removeAttribute(attribute.name);\n\n    attribute.value = value;\n    Reflect.set(element, attribute.name, attribute.value);\n};\n\nconst AttributeValue = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    const value = display(newValue);\n    attribute.value = value;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeLink = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n\n    const value = encodeURI(newValue);\n\n    if (dangerousLink(value)) {\n        element.removeAttribute(attribute.name);\n        console.warn(`XElement - attribute name \"${attribute.name}\" and value \"${value}\" not allowed`);\n        return;\n    }\n\n    attribute.value = value;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeStandard = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    attribute.value = newValue;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeName = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    element.removeAttribute(oldValue);\n\n    const name = newValue?.toLowerCase();\n\n    if (name === 'value') {\n        attribute.name = name;\n        AttributeValue(element, attribute, attribute.value, attribute.value);\n    } else if (name.startsWith('on')) {\n        console.warn(`XElement - dynamic attribute name \"${newValue}\" not allowed`);\n    } else if (includes(links, name)) {\n        console.warn(`XElement - dynamic attribute name \"${newValue}\" not allowed`);\n    } else if (includes(booleans, name)) {\n        attribute.name = name;\n        AttributeBoolean(element, attribute, attribute.value, attribute.value);\n    } else {\n        attribute.name = name;\n        AttributeStandard(element, attribute, attribute.value, attribute.value);\n    }\n\n};\n\nexport const Render = function (fragment: DocumentFragment, expressions: Expressions, actions: Actions) {\n    const walker = document.createTreeWalker(document, filter, null);\n\n    walker.currentNode = fragment;\n\n    let index = 0;\n    let node: Node | null = fragment.firstChild;\n\n    while ((node = walker.nextNode()) !== null) {\n        if (node.nodeType === Node.TEXT_NODE) {\n\n            const start = node.nodeValue?.indexOf('{{') ?? -1;\n\n            if (start == -1) continue;\n\n            if (start != 0) {\n                (node as Text).splitText(start);\n                node = walker.nextNode() as Node;\n            }\n\n            const end = node.nodeValue?.indexOf('}}') ?? -1;\n\n            if (end == -1) continue;\n\n            if (end + 2 != node.nodeValue?.length) {\n                (node as Text).splitText(end + 2);\n            }\n\n            const newValue = expressions[index++];\n\n            if (newValue?.constructor === Object && newValue?.symbol === symbol) {\n                const start = document.createTextNode('');\n                const end = node;\n                end.nodeValue = '';\n                end.parentNode?.insertBefore(start, end);\n                actions.push(ObjectAction.bind(null, start as Text, end as Text, []));\n            } else if (newValue?.constructor === Array) {\n                const start = document.createTextNode('');\n                const end = node;\n                end.nodeValue = '';\n                end.parentNode?.insertBefore(start, end);\n                actions.push(ArrayAction.bind(null, start as Text, end as Text, []));\n            } else {\n                (node as Text).textContent = '';\n                actions.push(StandardAction.bind(null, node as Text));\n            }\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n\n            if (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE') {\n                walker.nextSibling();\n            }\n\n            const names = (node as Element).getAttributeNames();\n            for (const name of names) {\n                const value = (node as Element).getAttribute(name) ?? '';\n                const attribute = { name, value };\n\n                const dynamicName = name.includes('{{') && name.includes('}}');\n                const dynamicValue = value.includes('{{') && value.includes('}}');\n\n                if (dynamicName) {\n                    index++;\n                    (node as Element).removeAttribute(name);\n                    actions.push(\n                        AttributeName.bind(null, node as Element, attribute),\n                    );\n                }\n\n                if (dynamicValue) {\n                    index++;\n                    (node as Element).removeAttribute(name);\n                    if (name === 'value') {\n                        actions.push(\n                            AttributeValue.bind(null, node as Element, attribute),\n                        );\n                    } else if (name.startsWith('on')) {\n                        actions.push(\n                            AttributeOn.bind(null, node as Element, attribute),\n                        );\n                    } else if (includes(links, name)) {\n                        actions.push(\n                            AttributeLink.bind(null, node as Element, attribute),\n                        );\n                    } else if (includes(booleans, name)) {\n                        actions.push(\n                            AttributeBoolean.bind(null, node as Element, attribute),\n                        );\n                    } else {\n                        actions.push(\n                            AttributeStandard.bind(null, node as Element, attribute),\n                        );\n                    }\n                }\n\n                if (!dynamicName && !dynamicValue) {\n                    if (includes(links, name)) {\n                        if (dangerousLink(value)) {\n                            (node as Element).removeAttribute(name);\n                            console.warn(`XElement - attribute name \"${name}\" and value \"${value}\" not allowed`);\n                        }\n                    } else if (name.startsWith('on')) {\n                        (node as Element).removeAttribute(name);\n                        console.warn(`XElement - attribute name \"${name}\" not allowed`);\n                    }\n                }\n\n            }\n        } else {\n            console.warn(`XElement - node type \"${node.nodeType}\" not handled`);\n        }\n    }\n};\n\nexport default Render;\n", "export type ContextValue = any;\nexport type ContextTarget = any;\nexport type ContextReceiver = any;\nexport type ContextMethod = () => void;\nexport type ContextKey = symbol | string;\nexport type ContextData = Record<string, any>;\n\n// const ContextCache = new WeakMap();\n\nconst ContextSet = function (method: ContextMethod, target: ContextTarget, key: ContextKey, value: ContextValue, receiver: ContextReceiver) {\n    if (typeof key === 'symbol') return Reflect.set(target, key, value, receiver);\n\n    const from = Reflect.get(target, key, receiver);\n\n    if (from === value) return true;\n    if (Number.isNaN(from) && Number.isNaN(value)) return true;\n\n    // if (from && (from.constructor.name === 'Object' || from.constructor.name === 'Array' || from.constructor.name === 'Function')) {\n    //     const cache = ContextCache.get(from);\n    //     if (cache === value) return true;\n    //     ContextCache.delete(from);\n    // }\n\n    Reflect.set(target, key, value, receiver);\n\n    method();\n\n    return true;\n};\n\nconst ContextGet = function (method: ContextMethod, target: ContextTarget, key: ContextKey, receiver: ContextReceiver): ContextValue {\n    if (typeof key === 'symbol') return Reflect.get(target, key, receiver);\n\n    const value = Reflect.get(target, key, receiver);\n\n    // if (value && (value.constructor.name === 'Object' || value.constructor.name === 'Array')) {\n    //     const cache = ContextCache.get(value);\n    //     if (cache) return cache;\n\n    //     const proxy = new Proxy(value, {\n    //         get: ContextGet.bind(null, method),\n    //         set: ContextSet.bind(null, method),\n    //         deleteProperty: ContextDelete.bind(null, method),\n    //     });\n\n    //     ContextCache.set(value, proxy);\n    //     return proxy;\n    // }\n\n    // if (value && target.constructor.name === 'Object' && (value.constructor.name === 'Function' || value.constructor.name === 'AsyncFunction')) {\n    //     const cache = ContextCache.get(value);\n    //     if (cache) return cache;\n\n    //     const proxy = new Proxy(value, {\n    //         apply(t, _, a) {\n    //             return Reflect.apply(t, receiver, a);\n    //         },\n    //     });\n\n    //     ContextCache.set(value, proxy);\n    //     return proxy;\n    // }\n\n    return value;\n};\n\nconst ContextDelete = function (method: ContextMethod, target: ContextTarget, key: ContextKey) {\n    if (typeof key === 'symbol') return Reflect.deleteProperty(target, key);\n\n    // const from = Reflect.get(target, key);\n    // ContextCache.delete(from);\n    Reflect.deleteProperty(target, key);\n\n    method()\n\n    return true;\n};\n\nconst Context = function (data: ContextData, method: ContextMethod) : Record<any,any> {\n    return new Proxy(data, {\n        get: ContextGet.bind(null, method),\n        set: ContextSet.bind(null, method),\n        deleteProperty: ContextDelete.bind(null, method),\n    });\n};\n\nexport default Context;\n", "export default function dash(data: string): string {\n    data = data.replace(/([a-zA-Z])([A-Z])/g, '$1-$2')\n    data = data.toLowerCase();\n    data = data.includes('-') ? data : `x-${data}`;\n    return data;\n}\n", "\nexport const adoptedEvent = new Event('adopted');\nexport const adoptingEvent = new Event('adopting');\n\nexport const upgradedEvent = new Event('upgraded');\nexport const upgradingEvent = new Event('upgrading');\n\nexport const creatingEvent = new Event('creating');\nexport const createdEvent = new Event('created');\n\nexport const renderingEvent = new Event('rendering');\nexport const renderedEvent = new Event('rendered');\n\nexport const connectedEvent = new Event('connected');\nexport const connectingEvent = new Event('connecting');\n\nexport const attributedEvent = new Event('attributed');\nexport const attributingEvent = new Event('attributing');\n\nexport const disconnectedEvent = new Event('disconnected');\nexport const disconnectingEvent = new Event('disconnecting');\n", "import define from './define';\nimport render from './render';\nimport context from './context';\nimport html from './html';\nimport dash from './dash';\nimport { Actions, Expressions, HTML } from './types';\nimport {\n    createdEvent,\n    creatingEvent,\n\n    renderedEvent,\n    renderingEvent,\n\n    adoptedEvent,\n    adoptingEvent,\n\n    connectedEvent,\n    connectingEvent,\n\n    attributedEvent,\n    attributingEvent,\n\n    disconnectedEvent,\n    disconnectingEvent,\n} from './events';\n\nexport default class Component extends HTMLElement {\n\n    static html = html;\n    static tag?: string;\n    static shadow: boolean = false;\n    static mode: 'open' | 'closed' = 'open';\n    static observedProperties?: Array<string>;\n    static define(tag?: string) {\n        tag = dash(tag ?? this.tag ?? this.name);\n        define(tag ?? this.tag ?? this.name, this);\n    }\n\n    setup?: (context: Record<any,any>) => void | Promise<void>;\n    render?: (context: Record<any, any>) => HTML | Promise<HTML>;\n\n    created?: (context: Record<any,any>) => void | Promise<void>;\n    // changed?: (context: Record<any,any>) => void | Promise<void>;\n    rendered?: (context: Record<any,any>) => void | Promise<void>;\n    connected?: (context: Record<any,any>) => void | Promise<void>;\n    adopted?: (context: Record<any,any>) => void | Promise<void>;\n    disconnected?: (context: Record<any,any>) => void | Promise<void>;\n    attribute?: (name: string, oldValue: string, newValue: string) => void | Promise<void>;\n\n    #context: Record<any,any> = {};\n    #root: Element | ShadowRoot;\n\n    #actions: Actions = [];\n    #expressions: Expressions = [];\n\n    #changeNext: (()=>Promise<any>) | undefined = undefined;\n    #changeCurrent: Promise<any> | undefined = undefined;\n\n    constructor() {\n        super();\n\n        const constructor = this.constructor as typeof Component;\n        const shadow = constructor.shadow;\n        if (shadow && !this.shadowRoot) {\n            const mode = constructor.mode;\n            this.attachShadow({ mode });\n        }\n\n        this.#root = this.shadowRoot ?? this;\n\n        this.#changeCurrent = Promise.resolve().then(() => this.#setup());\n    }\n\n    async attributeChangedCallback (name:string, oldValue:string, newValue:string) {\n        this.dispatchEvent(attributingEvent);\n        await this.attribute?.(name, oldValue, newValue)?.catch(console.error);\n        this.dispatchEvent(attributedEvent);\n    }\n\n    async adoptedCallback () {\n        this.dispatchEvent(adoptingEvent);\n        await this.adopted?.(this.#context)?.catch(console.error);\n        this.dispatchEvent(adoptedEvent);\n    }\n\n    async connectedCallback() {\n        await this.#changeCurrent;\n        this.dispatchEvent(connectingEvent);\n        await this.connected?.(this.#context)?.catch(console.error);\n        this.dispatchEvent(connectedEvent);\n    }\n\n    async disconnectedCallback() {\n        this.dispatchEvent(disconnectingEvent);\n        await this.disconnected?.(this.#context)?.catch(console.error);\n        this.dispatchEvent(disconnectedEvent);\n    }\n\n    async #change () {\n\n        const change = async () => {\n            this.dispatchEvent(renderingEvent);\n            const rendered = await this.render?.(this.#context);\n\n            if (rendered) {\n                for (let index = 0; index < this.#actions.length; index++) {\n                    const newExpression = rendered.expressions[ index ];\n                    const oldExpression = this.#expressions[ index ];\n                    this.#actions[ index ](oldExpression, newExpression);\n                    this.#expressions[ index ] = rendered.expressions[ index ];\n                }\n            }\n\n            // await this.changed?.(this.#context);\n            await this.rendered?.(this.#context);\n            this.dispatchEvent(renderedEvent);\n\n            this.#changeCurrent = this.#changeNext?.();\n            this.#changeNext = undefined;\n            await this.#changeCurrent;\n        };\n\n        if (this.#changeCurrent) {\n            this.#changeNext = change;\n        } else {\n            this.#changeCurrent = change();\n        }\n\n    }\n\n    async #setup () {\n\n        const constructor = this.constructor as typeof Component;\n        const observedProperties = constructor.observedProperties;\n        const prototype = Object.getPrototypeOf(this);\n        const properties = observedProperties ?? [];\n\n        // const properties = observedProperties ?\n        //     observedProperties ?? [] :\n        //     [ ...Object.getOwnPropertyNames(this),\n        //         ...Object.getOwnPropertyNames(prototype) ];\n\n        for (const property of properties) {\n\n            if (\n                'attributeChangedCallback' === property ||\n                'disconnectedCallback' === property ||\n                'connectedCallback' === property ||\n                'adoptedCallback' === property ||\n\n                'constructor' === property ||\n\n                'disconnect' === property ||\n                'attribute' === property ||\n                'connect' === property ||\n                'adopted' === property ||\n                'change' === property ||\n                'create' === property ||\n                'render' === property ||\n                'setup' === property\n            ) continue;\n\n            const descriptor = Object.getOwnPropertyDescriptor(this, property) ?? Object.getOwnPropertyDescriptor(prototype, property);\n\n            if (!descriptor) continue;\n            if (!descriptor.configurable) continue;\n\n            Object.defineProperty(this.#context, property, { ...descriptor, enumerable: false });\n\n            Object.defineProperty(this, property, {\n                enumerable: descriptor.enumerable,\n                configurable: descriptor.configurable,\n                get: () => (this.#context as Record<any,any>)[property],\n                set: (value) => {\n                    (this.#context as Record<any, any>)[ property ] = value;\n                    this.#change();\n                }\n            });\n\n        }\n\n        this.#context = context(this.#context, () => this.#change());\n        await this.#change();\n\n        await this.setup?.(this.#context);\n\n        this.dispatchEvent(renderingEvent);\n        const rendered = await this.render?.(this.#context);\n        if (rendered) {\n\n            const fragment = rendered.template.content.cloneNode(true) as DocumentFragment;\n            this.#expressions = rendered.expressions;\n\n            render(fragment, this.#expressions, this.#actions);\n            document.adoptNode(fragment);\n\n            for (let index = 0; index < this.#actions.length; index++) {\n                const newExpression = rendered.expressions[index];\n                this.#actions[index](undefined, newExpression);\n            }\n\n            this.#root.appendChild(fragment);\n        }\n        await this.rendered?.(this.#context);\n        this.dispatchEvent(renderedEvent);\n\n        this.#changeCurrent = this.#changeNext?.();\n        this.#changeNext = undefined;\n        await this.#changeCurrent;\n\n        this.dispatchEvent(creatingEvent);\n        await this.created?.(this.#context);\n        this.dispatchEvent(createdEvent);\n    }\n\n}", "import { replaceChildren } from './poly';\nimport define from './define';\nimport dash from './dash';\nimport {Route,Handler,Module} from './types';\nimport Component from './component';\n\nconst alls: Array<Route> = [];\nconst routes: Array<Route> = [];\n\n// const notModule = function (module: any) {\n//     return (!Object.keys(module).length) || (!!module.default && typeof module.default === 'object' && !Object.keys(module.default).length);\n// };\n// const data = notModule(result) ? result : result?.default ?? result;\n\nconst transition = async function (route: Route) {\n    if (route.instance) {\n        replaceChildren(route.root, route.instance);\n    } else {\n        const result = await route.handler();\n        if ((result as CustomElementConstructor)?.prototype instanceof HTMLElement) {\n            route.construct = result as CustomElementConstructor;\n        } else if (((result as Module)?.default as CustomElementConstructor)?.prototype instanceof HTMLElement) {\n            route.construct = (result as Module).default as CustomElementConstructor;\n        } else {\n            throw new Error('XElement - router handler requires a CustomElementConstructor');\n        }\n\n        route.tag = dash((route.construct as typeof Component).tag ?? route.construct.name);\n        define(route.tag, route.construct);\n        route.instance = document.createElement(route.tag);\n        replaceChildren(route.root, route.instance);\n    }\n};\n\nconst navigate = function (event?: any) {\n    if (event && 'canIntercept' in event && event.canIntercept === false) return;\n    if (event && 'canTransition' in event && event.canTransition === false) return;\n\n    const destination = new URL(event?.destination.url ?? location.href);\n    const base = new URL(document.querySelector('base')?.href ?? location.origin);\n\n    base.hash = '';\n    base.search = '';\n    destination.hash = '';\n    destination.search = '';\n\n    const pathname = destination.href.replace(base.href, '/');\n    const transitions: Array<Route> = [];\n\n    for (const route of routes) {\n        if (route.path !== pathname) continue;\n        transitions.push(route);\n    }\n\n    for (const all of alls) {\n        let has = false;\n\n        for (const transition of transitions) {\n            if (transition.root === all.root) {\n                has = true;\n                break;\n            }\n        }\n\n        if (has) continue;\n\n        transitions.push(all);\n    }\n\n    if (event?.intercept) {\n        return event.intercept({ handler: () => transitions.map((route) => transition(route)) });\n    } else if (event?.transitionWhile) {\n        return event.transitionWhile(transitions.map((route) => transition(route)));\n    } else {\n        transitions.map((route) => transition(route));\n    }\n};\n\nconst router = function (path: string, root: Element, handler: Handler) {\n    if (!path) throw new Error('XElement - router path required');\n    if (!handler) throw new Error('XElement - router handler required');\n    if (!root) throw new Error('XElement - router root required');\n\n    if (path === '/*') {\n        for (const all of alls) {\n            if (all.path === path && all.root === root) {\n                throw new Error('XElement - router duplicate path on root');\n            }\n        }\n\n        alls.push({ path, root, handler, });\n    } else {\n        for (const route of routes) {\n            if (route.path === path && route.root === root) {\n                throw new Error('XElement - router duplicate path on root');\n            }\n        }\n\n        routes.push({ path, root, handler, instance: undefined });\n    }\n\n    Reflect.get(window, 'navigation').addEventListener('navigate', navigate);\n};\n\nexport default router;\n", "import Component from './component';\nimport Router from './router';\nimport html from './html';\n\nexport { Component };\nexport { Router };\nexport { html };\n\nexport { Component as component };\nexport { Router as router };\n\nexport default {\n\n    Component,\n    Router,\n\n    component: Component,\n    router: Router,\n\n    html,\n\n};\n"],
  "mappings": "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",
  "names": ["template", "start", "end", "transition"]
}
