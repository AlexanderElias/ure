{
  "version": 3,
  "sources": ["../src/dash.ts", "../src/define.ts", "../src/events.ts", "../src/display.ts", "../src/booleans.ts", "../src/poly.ts", "../src/html.ts", "../src/render.ts", "../src/component.ts", "../src/router.ts", "../src/index.ts"],
  "sourcesContent": ["export default function dash(data: string): string {\n    data = data.replace(/([a-zA-Z])([A-Z])/g, '$1-$2')\n    data = data.toLowerCase();\n    data = data.includes('-') ? data : `x-${data}`;\n    return data;\n}\n", "import dash from './dash';\n\nexport default function define(name: string, constructor: CustomElementConstructor) {\n    if (!customElements.get(name)) {\n        customElements.define(name, constructor);\n    }\n}", "\nexport const adoptedEvent = new Event('adopted');\nexport const adoptingEvent = new Event('adopting');\n\nexport const upgradedEvent = new Event('upgraded');\nexport const upgradingEvent = new Event('upgrading');\n\nexport const creatingEvent = new Event('creating');\nexport const createdEvent = new Event('created');\n\nexport const renderingEvent = new Event('rendering');\nexport const renderedEvent = new Event('rendered');\n\nexport const connectedEvent = new Event('connected');\nexport const connectingEvent = new Event('connecting');\n\nexport const attributedEvent = new Event('attributed');\nexport const attributingEvent = new Event('attributing');\n\nexport const disconnectedEvent = new Event('disconnected');\nexport const disconnectingEvent = new Event('disconnecting');\n", "\nexport default function display(data: any): string {\n    switch (typeof data) {\n        case 'undefined':\n            return '';\n        case 'string':\n            return data;\n        case 'number':\n            return `${data}`;\n        case 'bigint':\n            return `${data}`;\n        case 'boolean':\n            return `${data}`;\n        case 'function':\n            return `${data()}`;\n        case 'symbol':\n            return String(data);\n        case 'object':\n            return JSON.stringify(data);\n        default:\n            throw new Error('display - type not handled');\n    }\n}\n", "const booleans = [\n    'allowfullscreen',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'compact',\n    'controls',\n    'declare',\n    'default',\n    'defaultchecked',\n    'defaultmuted',\n    'defaultselected',\n    'defer',\n    'disabled',\n    'draggable',\n    'enabled',\n    'formnovalidate',\n    'indeterminate',\n    'inert',\n    'ismap',\n    'itemstate',\n    'loop',\n    'multiple',\n    'muted',\n    'nohref',\n    'noshade',\n    'hidden',\n    'novalidate',\n    'nowrap',\n    'open',\n    'pauseonexit',\n    'readonly',\n    'required',\n    'reversed',\n    'stated',\n    'seamless',\n    'selected',\n    'sortable',\n    'spellcheck',\n    'translate',\n    'truespeed',\n    'typemustmatch',\n    'visible',\n];\n\nexport default booleans;\n", "\nexport const replaceChildren = function (element: Element | Document | DocumentFragment, ...nodes: (Node | string)[]): void {\n\n    while (element.lastChild) {\n        element.removeChild(element.lastChild);\n\n    }\n\n    if (nodes?.length) {\n        for (const node of nodes) {\n            element.appendChild(\n                typeof node === 'string' ?\n                (element.ownerDocument as Document).createTextNode(node) :\n                node\n            );\n        }\n    }\n\n};\n\nexport const includes = function (item: string | Array<any>, search: any) {\n    return item.indexOf(search) !== -1;\n};\n\nconst policy = 'trustedTypes' in window ? (window as any).trustedTypes.createPolicy('x-element', { createHTML: (data:string) => data }) : null;\nexport const createHTML = function (data: string) {\n    if (policy) {\n        return policy.createHTML(data);\n    } else {\n        return data;\n    }\n}\n\nexport const hasOwn = function (object:any, key:any) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}", "import { createHTML } from './poly';\nimport render from './render';\n// import parse from './parse';\n\ntype TemplateExpressionsArray = any[];\ntype TemplateActionsArray = any[];\n\nconst cache: WeakMap<TemplateStringsArray, HTMLTemplateElement> = new WeakMap();\n// const Templates: WeakMap<TemplateStringsArray, HTMLTemplateElement> = new WeakMap();\n// const Actions: WeakMap<DocumentFragment, any[]> = new WeakMap();\n// const Expressions: WeakMap<DocumentFragment, any[]> = new WeakMap();\n\nexport const symbol = Symbol('html');\n\n// class Html {\n//     template: HTMLTemplateElement;\n//     expressions: TemplateExpressionsArray;\n//     constructor(template: HTMLTemplateElement, expressions: TemplateExpressionsArray) {\n//         this.template = template;\n//         this.expressions = expressions;\n//     }\n// }\n\nexport default function html(strings: TemplateStringsArray, ...expressions: TemplateExpressionsArray): any {\n    const template = cache.get(strings);\n    if (template) {\n        // console.log(expressions)\n\n        // const length = cache.actions.length ?? 0;\n        // for (let index = 0; index < length; index++) {\n        //     const newExpression = expressions[index];\n        //     const oldExpressions = cache.expressions[index];\n        //     cache.actions[index](oldExpressions, newExpression);\n        //     cache.expressions[index] = newExpression;\n        // }\n\n        // return cache.fragment;\n        return { strings, template, expressions, symbol };\n    } else {\n        let data = '';\n\n        const length = strings.length - 1;\n\n        for (let index = 0; index < length; index++) {\n            data += `${strings[index]}{{${index}}}`;\n        }\n\n        data += strings[length];\n\n        const template = document.createElement('template');\n        template.innerHTML = createHTML(data);\n\n        cache.set(strings, template);\n\n        return { strings, template, expressions, symbol };\n\n        // const fragment = template.content.cloneNode(true) as DocumentFragment;\n        // const expressions = [];\n        // Expressions.set(fragment, expressions);\n\n        // const actions: any = [];\n        // Actions.set(fragment, actions);\n\n        // render(fragment, expressions, actions);\n        // document.adoptNode(fragment);\n\n        // for (let index = 0; index < actions.length; index++) {\n        //     const newExpression = expressions[index];\n        //     actions[index](undefined, newExpression);\n        // }\n\n        // return fragment;\n\n        // const cache = {\n        // expressions,\n        // actions: [] as TemplateActionsArray,\n        // template: document.createElement('template')\n        // fragment: template.content.cloneNode(true) as DocumentFragment\n        // };\n\n        // cache.template.innerHTML = createHTML(data);\n\n        // Cache.set(strings, cache);\n\n        // render(cache.fragment, cache.expressions, cache.actions);\n        // document.adoptNode(cache.fragment);\n\n        // for (let index = 0; index < cache.actions.length; index++) {\n        //     const newExpression = cache.expressions[index];\n        //     cache.actions[index](undefined, newExpression);\n        // }\n\n        // return cache.fragment;\n    }\n}\n", "import display from './display';\nimport booleans from './booleans';\nimport { symbol } from './html';\nimport { includes } from './poly';\n\nexport type Value = any;\nexport type OldValue = Value;\nexport type NewValue = Value;\nexport type Expressions = Array<Value>;\nexport type Actions = Array<(oldValue: OldValue, newValue: NewValue) => void>;\nexport type Attribute = { name: string, value: string };\n\nconst filter = NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_TEXT;\n\nconst links = ['src', 'href', 'xlink:href'];\nconst safePattern = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i;\n\nconst dangerousLink = function (data: string) {\n    return typeof data !== 'string' || !safePattern.test(data);\n};\n\nconst ObjectAction = function (start: Text, end: Text, actions: Actions, oldValue: OldValue, newValue: NewValue) {\n\n    oldValue = oldValue ?? {};\n    newValue = newValue ?? {};\n\n    if (oldValue?.strings !== newValue.strings) {\n\n        let next;\n        let node = end.previousSibling;\n        while (node !== start) {\n            next = node?.previousSibling as ChildNode;\n            node?.parentNode?.removeChild(node);\n            node = next;\n        }\n\n        const fragment = newValue.template.content.cloneNode(true);\n        Render(fragment, newValue.expressions, actions);\n        document.adoptNode(fragment);\n\n        const l = actions.length;\n        for (let i = 0; i < l; i++) {\n            actions[i](oldValue.expressions?.[i], newValue.expressions[i]);\n        }\n\n        end.parentNode?.insertBefore(fragment, end);\n    } else {\n        const l = actions.length;\n        for (let i = 0; i < l; i++) {\n            actions[i](oldValue.expressions?.[i], newValue.expressions[i]);\n        }\n    }\n};\n\nconst ArrayAction = function (start: Text, end: Text, actions: Actions, oldValue: OldValue, newValue: NewValue) {\n\n    oldValue = oldValue ?? [];\n    newValue = newValue ?? [];\n\n    const oldLength = oldValue.length;\n    const newLength = newValue.length;\n    const common = Math.min(oldLength, newLength);\n\n    for (let i = 0; i < common; i++) {\n        actions[i](oldValue[i], newValue[i]);\n    }\n\n    if (oldLength < newLength) {\n        const template = document.createElement('template');\n\n        for (let i = oldLength; i < newLength; i++) {\n\n            if (newValue[i]?.constructor === Object && newValue[i]?.symbol === symbol) {\n                const start = document.createTextNode('');\n                const end = document.createTextNode('');\n                const action = ObjectAction.bind(null, start, end, []);\n\n                template.content.appendChild(start);\n                template.content.appendChild(end);\n\n                actions.push(action);\n\n                action(oldValue[i], newValue[i]);\n            } else {\n                const node = document.createTextNode('');\n                const action = StandardAction.bind(null, node as Text);\n\n                template.content.appendChild(node);\n                actions.push(action);\n\n                action(oldValue[i], newValue[i]);\n            }\n\n        }\n\n        end.parentNode?.insertBefore(template.content as Node, end);\n    } else if (oldLength > newLength) {\n\n        for (let i = oldLength - 1; i > newLength - 1; i--) {\n\n            // if (oldValue[i]?.constructor === Object && oldValue[i]?.symbol === symbol) {\n            //     const { template } = oldValue[i];\n            //     let removes = template.content.childNodes.length + 2;\n            //     while (removes--) end.parentNode?.removeChild(end.previousSibling as Node);\n            // } else {\n            end.parentNode?.removeChild(end.previousSibling as Node);\n            // }\n\n        }\n\n        actions.length = newLength;\n    }\n};\n\nconst StandardAction = function (node: Text, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    node.textContent = newValue;\n};\n\nconst AttributeOn = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    if (typeof oldValue === 'function') element.removeEventListener(attribute.name.slice(2), oldValue);\n    if (typeof newValue !== 'function') return console.warn(`XElement - attribute name \"${attribute.name}\" and value \"${newValue}\" not allowed`);\n    element.addEventListener(attribute.name.slice(2), newValue);\n};\n\nconst AttributeBoolean = function (element: Element, attribute: { name: string; value: any }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n\n    const value = newValue ? true : false;\n    if (value) element.setAttribute(attribute.name, '');\n    else element.removeAttribute(attribute.name);\n\n    attribute.value = value;\n    Reflect.set(element, attribute.name, attribute.value);\n};\n\nconst AttributeValue = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    const value = display(newValue);\n    attribute.value = value;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeLink = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n\n    const value = encodeURI(newValue);\n\n    if (dangerousLink(value)) {\n        element.removeAttribute(attribute.name);\n        console.warn(`XElement - attribute name \"${attribute.name}\" and value \"${value}\" not allowed`);\n        return;\n    }\n\n    attribute.value = value;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeStandard = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    attribute.value = newValue;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeName = function (element: Element, attribute: Attribute, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    element.removeAttribute(oldValue);\n\n    const name = newValue?.toLowerCase();\n\n    if (name === 'value') {\n        attribute.name = name;\n        AttributeValue(element, attribute, attribute.value, attribute.value);\n    } else if (name.startsWith('on')) {\n        console.warn(`XElement - dynamic attribute name \"${newValue}\" not allowed`);\n    } else if (includes(links, name)) {\n        console.warn(`XElement - dynamic attribute name \"${newValue}\" not allowed`);\n    } else if (includes(booleans, name)) {\n        attribute.name = name;\n        AttributeBoolean(element, attribute, attribute.value, attribute.value);\n    } else {\n        attribute.name = name;\n        AttributeStandard(element, attribute, attribute.value, attribute.value);\n    }\n\n};\n\nexport const Render = function (fragment: DocumentFragment, expressions: Expressions, actions: Actions) {\n    const walker = document.createTreeWalker(document, filter, null);\n\n    walker.currentNode = fragment;\n\n    let index = 0;\n    let node: Node | null = fragment.firstChild;\n\n    while ((node = walker.nextNode()) !== null) {\n        if (node.nodeType === Node.TEXT_NODE) {\n\n            const start = node.nodeValue?.indexOf('{{') ?? -1;\n\n            if (start == -1) continue;\n\n            if (start != 0) {\n                (node as Text).splitText(start);\n                node = walker.nextNode() as Node;\n            }\n\n            const end = node.nodeValue?.indexOf('}}') ?? -1;\n\n            if (end == -1) continue;\n\n            if (end + 2 != node.nodeValue?.length) {\n                (node as Text).splitText(end + 2);\n            }\n\n            const newValue = expressions[index++];\n\n            if (newValue?.constructor === Object && newValue?.symbol === symbol) {\n                const start = document.createTextNode('');\n                const end = node;\n                end.nodeValue = '';\n                end.parentNode?.insertBefore(start, end);\n                actions.push(ObjectAction.bind(null, start as Text, end as Text, []));\n            } else if (newValue?.constructor === Array) {\n                const start = document.createTextNode('');\n                const end = node;\n                end.nodeValue = '';\n                end.parentNode?.insertBefore(start, end);\n                actions.push(ArrayAction.bind(null, start as Text, end as Text, []));\n            } else {\n                (node as Text).textContent = '';\n                actions.push(StandardAction.bind(null, node as Text));\n            }\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n\n            if (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE') {\n                walker.nextSibling();\n            }\n\n            const names = (node as Element).getAttributeNames();\n            for (const name of names) {\n                const value = (node as Element).getAttribute(name) ?? '';\n                const attribute = { name, value };\n\n                const dynamicName = name.includes('{{') && name.includes('}}');\n                const dynamicValue = value.includes('{{') && value.includes('}}');\n\n                if (dynamicName) {\n                    index++;\n                    (node as Element).removeAttribute(name);\n                    actions.push(\n                        AttributeName.bind(null, node as Element, attribute),\n                    );\n                }\n\n                if (dynamicValue) {\n                    index++;\n                    (node as Element).removeAttribute(name);\n                    if (name === 'value') {\n                        actions.push(\n                            AttributeValue.bind(null, node as Element, attribute),\n                        );\n                    } else if (name.startsWith('on')) {\n                        actions.push(\n                            AttributeOn.bind(null, node as Element, attribute),\n                        );\n                    } else if (includes(links, name)) {\n                        actions.push(\n                            AttributeLink.bind(null, node as Element, attribute),\n                        );\n                    } else if (includes(booleans, name)) {\n                        actions.push(\n                            AttributeBoolean.bind(null, node as Element, attribute),\n                        );\n                    } else {\n                        actions.push(\n                            AttributeStandard.bind(null, node as Element, attribute),\n                        );\n                    }\n                }\n\n                if (!dynamicName && !dynamicValue) {\n                    if (includes(links, name)) {\n                        if (dangerousLink(value)) {\n                            (node as Element).removeAttribute(name);\n                            console.warn(`XElement - attribute name \"${name}\" and value \"${value}\" not allowed`);\n                        }\n                    } else if (name.startsWith('on')) {\n                        (node as Element).removeAttribute(name);\n                        console.warn(`XElement - attribute name \"${name}\" not allowed`);\n                    }\n                }\n\n            }\n        } else {\n            console.warn(`XElement - node type \"${node.nodeType}\" not handled`);\n        }\n    }\n};\n\nexport default Render;\n", "import dash from './dash';\nimport define from './define';\nimport {\n    createdEvent,\n    creatingEvent,\n    renderedEvent,\n    renderingEvent,\n    connectedEvent,\n    connectingEvent,\n    disconnectedEvent,\n    disconnectingEvent,\n} from './events';\nimport html from './html';\nimport render from './render';\n\nexport default class Component extends HTMLElement {\n\n    static tag?: string;\n    static shadow: boolean = false;\n    static mode: 'open' | 'closed' = 'open';\n\n    static define(tag?: string) {\n        tag = dash(tag ?? this.tag ?? this.name);\n        define(tag ?? this.tag ?? this.name, this);\n    }\n\n    // construct?: (ctx: any) => void | Promise<void>;\n    // upgrade?: (ctx: any) => void | Promise<void>;\n    create?: (ctx: any) => void | Promise<void>;\n    render?: (ctx: any) => typeof html | Promise<typeof html>;\n    connect?: (ctx: any) => void | Promise<void>;\n    disconnect?: (ctx: any) => void | Promise<void>;\n    // connecting?: (ctx: any) => void | Promise<void>;\n    // connected?: (ctx: any) => void | Promise<void>;\n    // disconnecting?: (ctx: any) => void | Promise<void>;\n    // disconnected?: (ctx: any) => void | Promise<void>;\n\n    #context = {};\n    #construct: Promise<void> | null;\n\n    constructor() {\n        super();\n\n        if (!customElements.get('x-test')) {\n            customElements.define('x-test', this as any);\n        }\n\n        const constructor = this.constructor as typeof Component;\n\n        const shadow = constructor.shadow;\n        if (shadow && !this.shadowRoot) {\n            const mode = constructor.mode;\n            this.attachShadow({ mode });\n        }\n\n        const root = this.shadowRoot ?? this;\n\n        // create context\n\n        this.#construct = Promise.resolve().then(async () => {\n            this.dispatchEvent(creatingEvent);\n            await this.create?.(this.#context);\n            this.dispatchEvent(createdEvent);\n\n            this.dispatchEvent(renderingEvent);\n\n            const { template, expressions } = await this.render?.(this.#context);\n\n            const fragment = template.content.cloneNode(true) as DocumentFragment;\n            const actions: any = [];\n\n            render(fragment, expressions, actions);\n            document.adoptNode(fragment);\n\n            for (let index = 0; index < actions.length; index++) {\n                const newExpression = expressions[index];\n                actions[index](undefined, newExpression);\n            }\n\n            root.appendChild(fragment as any);\n            //update context with render\n\n            this.dispatchEvent(renderedEvent);\n\n            setInterval(async () => {\n                // this.render?.(this.#context);\n\n                const result = await this.render?.(this.#context);\n                for (let index = 0; index < actions.length; index++) {\n                    const newExpression = result.expressions[index];\n                    const oldExpressions = expressions[index];\n                    actions[index](oldExpressions, newExpression);\n                    expressions[index] = newExpression;\n                }\n\n            }, 1000);\n\n            this.#construct = null;\n        });\n    }\n\n    async connectedCallback() {\n        this.dispatchEvent(connectingEvent);\n\n        if (this.#construct) await this.#construct;\n\n        await this.connect?.(this.#context)?.catch(console.error);\n\n        this.dispatchEvent(connectedEvent);\n    }\n\n    async disconnectedCallback() {\n        this.dispatchEvent(disconnectingEvent);\n        await this.disconnect?.(this.#context)?.catch(console.error);\n        this.dispatchEvent(disconnectedEvent);\n    }\n\n}", "import { replaceChildren } from './poly';\nimport define from './define';\nimport dash from './dash';\n\ntype Module = { default: CustomElementConstructor }\ntype Handler = () => Module | CustomElementConstructor | Promise<Module | CustomElementConstructor>;\n\ntype Route = {\n    path: string;\n    root: Element;\n    handler: Handler;\n\n    tag?: string;\n    instance?: Element;\n    construct?: CustomElementConstructor;\n};\n\nconst alls: Array<Route> = [];\nconst routes: Array<Route> = [];\n\n// const notModule = function (module: any) {\n//     return (!Object.keys(module).length) || (!!module.default && typeof module.default === 'object' && !Object.keys(module.default).length);\n// };\n// const data = notModule(result) ? result : result?.default ?? result;\n\nconst transition = async function (route: Route) {\n    if (route.instance) {\n        replaceChildren(route.root, route.instance);\n    } else {\n        const result = await route.handler();\n        route.construct = result instanceof HTMLElement ? result as CustomElementConstructor : (result as Module).default;\n        route.tag = dash((route.construct as any).tag ?? route.construct.name);\n        define(route.tag, route.construct);\n        route.instance = document.createElement(route.tag);\n        replaceChildren(route.root, route.instance);\n    }\n};\n\nconst navigate = function (event?: any) {\n    if (event && 'canIntercept' in event && event.canIntercept === false) return;\n    if (event && 'canTransition' in event && event.canTransition === false) return;\n\n    const destination = new URL(event?.destination.url ?? location.href);\n    const base = new URL(document.querySelector('base')?.href ?? location.origin);\n\n    base.hash = '';\n    base.search = '';\n    destination.hash = '';\n    destination.search = '';\n\n    const pathname = destination.href.replace(base.href, '/');\n    const transitions: Array<Route> = [];\n\n    for (const route of routes) {\n        if (route.path !== pathname) continue;\n        transitions.push(route);\n    }\n\n    for (const all of alls) {\n        let has = false;\n\n        for (const transition of transitions) {\n            if (transition.root === all.root) {\n                has = true;\n                break;\n            }\n        }\n\n        if (has) continue;\n\n        transitions.push(all);\n    }\n\n    if (event?.intercept) {\n        return event.intercept({ handler: () => transitions.map((route) => transition(route)) });\n    } else if (event?.transitionWhile) {\n        return event.transitionWhile(transitions.map((route) => transition(route)));\n    } else {\n        transitions.map((route) => transition(route));\n    }\n};\n\nconst router = function (path: string, root: Element, handler: Handler) {\n    if (!path) throw new Error('XElement - router path required');\n    if (!handler) throw new Error('XElement - router handler required');\n    if (!root) throw new Error('XElement - router root required');\n\n    if (path === '/*') {\n        for (const all of alls) {\n            if (all.path === path && all.root === root) {\n                throw new Error('XElement - router duplicate path on root');\n            }\n        }\n\n        alls.push({ path, root, handler, });\n    } else {\n        for (const route of routes) {\n            if (route.path === path && route.root === root) {\n                throw new Error('XElement - router duplicate path on root');\n            }\n        }\n\n        routes.push({ path, root, handler, instance: undefined });\n    }\n\n    Reflect.get(window, 'navigation').addEventListener('navigate', navigate);\n};\n\nexport default router;\n", "import Component from './component';\nimport Router from './router';\nimport html from './html';\n\nexport { Component };\nexport { Router };\nexport { html };\n\nexport { Component as component };\nexport { Router as router };\n\nexport default {\n\n    Component,\n    Router,\n\n    component: Component,\n    router: Router,\n\n    html,\n\n};\n"],
  "mappings": "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",
  "names": ["template", "start", "end", "_a", "transition"]
}
