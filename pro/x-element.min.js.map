{
  "version": 3,
  "sources": ["../src/poly.ts", "../src/display.ts", "../src/booleans.ts", "../src/html.ts", "../src/render.ts", "../src/observe.ts", "../src/dash.ts", "../src/component.ts", "../src/router.ts", "../src/index.ts"],
  "sourcesContent": ["\nexport const replaceChildren = function (element: Element | Document | DocumentFragment, ...nodes: (Node | string)[]): void {\n\n    while (element.lastChild) {\n        element.removeChild(element.lastChild);\n\n    }\n\n    if (nodes?.length) {\n        for (const node of nodes) {\n            element.appendChild(\n                typeof node === 'string' ?\n                (element.ownerDocument as Document).createTextNode(node) :\n                node\n            );\n        }\n    }\n\n};\n\nexport const includes = function (item: string | Array<any>, search: any) {\n    return item.indexOf(search) !== -1;\n};\n\nconst policy = 'trustedTypes' in window ? (window as any).trustedTypes.createPolicy('x-element', { createHTML: (data:string) => data }) : null;\nexport const createHTML = function (data: string) {\n    if (policy) {\n        return policy.createHTML(data);\n    } else {\n        return data;\n    }\n}\n\nexport const hasOwn = function (object:any, key:any) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}", "export default function display(data: any): string {\n    switch (typeof data) {\n        case 'undefined':\n            return '';\n        case 'string':\n            return data;\n        case 'number':\n            return `${data}`;\n        case 'bigint':\n            return `${data}`;\n        case 'boolean':\n            return `${data}`;\n        case 'function':\n            return `${data()}`;\n        case 'symbol':\n            return String(data);\n        case 'object':\n            return JSON.stringify(data);\n        default:\n            throw new Error('display - type not handled');\n    }\n}\n", "const booleans = [\n    'allowfullscreen',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'compact',\n    'controls',\n    'declare',\n    'default',\n    'defaultchecked',\n    'defaultmuted',\n    'defaultselected',\n    'defer',\n    'disabled',\n    'draggable',\n    'enabled',\n    'formnovalidate',\n    'indeterminate',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nohref',\n    'noshade',\n    'hidden',\n    'novalidate',\n    'nowrap',\n    'open',\n    'pauseonexit',\n    'readonly',\n    'required',\n    'reversed',\n    'scoped',\n    'seamless',\n    'selected',\n    'sortable',\n    'spellcheck',\n    'translate',\n    'truespeed',\n    'typemustmatch',\n    'visible',\n];\n\nexport default booleans;\n", "import { createHTML } from './poly';\n// import parse from './parse';\n\nexport const HtmlCache = new WeakMap();\nexport const HtmlSymbol = Symbol('html');\n\ntype TemplateExpressionsArray = any[];\n\n// export class H {\n//     strings:TemplateStringsArray;\n//     expressions:TemplateExpressionsArray;\n//     template: HTMLTemplateElement;\n//     constructor(strings: TemplateStringsArray, expressions: TemplateExpressionsArray, template: HTMLTemplateElement) {\n//         this.strings = strings;\n//         this.expressions = expressions;\n//         this.template = template;\n//     }\n// }\n\nexport default function html(strings: TemplateStringsArray, ...expressions: TemplateExpressionsArray) {\n    if (HtmlCache.has(strings)) {\n        const template = HtmlCache.get(strings);\n        // return new H(strings, expressions, template);\n        return { strings, expressions, values:expressions, template, symbol: HtmlSymbol };\n    } else {\n        let data = '';\n\n        const length = strings.length - 1;\n\n        for (let index = 0; index < length; index++) {\n            data += `${strings[index]}{{${index}}}`;\n        }\n\n        data += strings[length];\n\n        const template = document.createElement('template');\n        template.innerHTML = createHTML(data);\n\n        // const template = parse(data);\n\n        HtmlCache.set(strings, template);\n\n        // return new H(strings, expressions, template);\n        return { strings, expressions, values:expressions, template, symbol: HtmlSymbol };\n    }\n}\n", "import display from './display';\nimport booleans from './booleans';\nimport { HtmlSymbol } from './html';\nimport { includes } from './poly';\n\ntype Value = any;\ntype OldValue = Value;\ntype NewValue = Value;\ntype Values = Array<Value>;\ntype Actions = Array<(oldValue: OldValue, newValue: NewValue) => void>;\n\nconst links= [ 'src', 'href', 'xlink:href' ];\nconst safePattern = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i;\n\nconst dangerousLink = function (data: string) {\n    return typeof data !== 'string' || !safePattern.test(data);\n};\n\nconst ObjectAction = function (start: Text, end: Text, actions: Actions, oldValue: OldValue, newValue: NewValue) {\n    oldValue = oldValue ?? {};\n    newValue = newValue ?? {};\n\n    if (oldValue?.strings !== newValue.strings) {\n        let next;\n        let node = end.previousSibling;\n        while (node !== start) {\n            next = node?.previousSibling as ChildNode;\n            node?.parentNode?.removeChild(node);\n            node = next;\n        }\n\n        const fragment = newValue.template.content.cloneNode(true);\n        RenderWalk(fragment, newValue.values, actions);\n        document.adoptNode(fragment);\n\n        const l = actions.length;\n        for (let i = 0; i < l; i++) {\n            actions[i](oldValue.values?.[i], newValue.values[i]);\n        }\n\n        end.parentNode?.insertBefore(fragment, end);\n    } else {\n        const l = actions.length;\n        for (let i = 0; i < l; i++) {\n            actions[i](oldValue.values?.[i], newValue.values[i]);\n        }\n    }\n};\n\nconst ArrayAction = function (start: Text, end: Text, actions: Actions, oldValue: OldValue, newValue: NewValue) {\n    oldValue = oldValue ?? [];\n    newValue = newValue ?? [];\n\n    const oldLength = oldValue.length;\n    const newLength = newValue.length;\n    const common = Math.min(oldLength, newLength);\n\n    for (let i = 0; i < common; i++) {\n        actions[i](oldValue[i], newValue[i]);\n    }\n\n    if (oldLength < newLength) {\n        const template = document.createElement('template');\n        for (let i = oldLength; i < newLength; i++) {\n            if (newValue[i]?.constructor === Object && newValue[i]?.symbol === HtmlSymbol) {\n                const start = document.createTextNode('');\n                const end = document.createTextNode('');\n                const action = ObjectAction.bind(null, start, end, []);\n                template.content.appendChild(start);\n                template.content.appendChild(end);\n                actions.push(action);\n                action(oldValue[i], newValue[i]);\n            } else {\n                const node = document.createTextNode('');\n                const action = StandardAction.bind(null, node as Text);\n                template.content.appendChild(node);\n                actions.push(action);\n                action(oldValue[i], newValue[i]);\n            }\n        }\n        end.parentNode?.insertBefore(template.content as Node, end);\n    } else if (oldLength > newLength) {\n        for (let i = oldLength-1; i > newLength-1; i--) {\n            if (oldValue[i]?.constructor === Object && oldValue[i]?.symbol === HtmlSymbol) {\n                const { template } = oldValue[i];\n                let removes = template.content.childNodes.length + 2;\n                while (removes--) end.parentNode?.removeChild(end.previousSibling as Node);\n            } else {\n                end.parentNode?.removeChild(end.previousSibling as Node);\n            }\n        }\n        actions.length = newLength;\n    }\n};\n\nconst StandardAction = function (node: Text, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    node.textContent = newValue;\n};\n\nconst AttributeOn = function (element: Element, attribute: { name: string; value: string }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    if (typeof oldValue === 'function') element.removeEventListener(attribute.name.slice(2), oldValue);\n    if (typeof newValue !== 'function') return console.warn(`XElement - attribute name \"${attribute.name}\" and value \"${newValue}\" not allowed`);\n    element.addEventListener(attribute.name.slice(2), newValue);\n};\n\nconst AttributeBoolean = function (element: Element, attribute: { name: string; value: any }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n\n    const value = newValue ? true : false;\n    if (value) element.setAttribute(attribute.name, '');\n    else element.removeAttribute(attribute.name);\n\n    attribute.value = value;\n    Reflect.set(element, attribute.name, attribute.value);\n};\n\nconst AttributeValue = function (element: Element, attribute: { name: string; value: string }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    const value = display(newValue);\n    attribute.value = value;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeLink = function (element: Element, attribute: { name: string; value: string }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n\n    if (dangerousLink(newValue)) {\n        element.removeAttribute(attribute.name);\n        console.warn(`XElement - attribute name \"${attribute.name}\" and value \"${newValue}\" not allowed`);\n        return;\n    }\n\n    attribute.value = newValue;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeStandard = function (element: Element, attribute: { name: string; value: string }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    attribute.value = newValue;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeName = function (element: Element, attribute: { name: string; value: string }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    element.removeAttribute(oldValue);\n\n    const name = newValue?.toLowerCase();\n\n    if (name === 'value') {\n        attribute.name = name;\n        AttributeValue(element, attribute, attribute.value, attribute.value);\n    } else if (name.startsWith('on')) {\n        console.warn(`XElement - dynamic attribute name \"${newValue}\" not allowed`);\n    } else if (includes(links, name)) {\n        console.warn(`XElement - dynamic attribute name \"${newValue}\" not allowed`);\n    } else if (includes(booleans, name)) {\n        attribute.name = name;\n        AttributeBoolean(element, attribute, attribute.value, attribute.value);\n    } else {\n        attribute.name = name;\n        AttributeStandard(element, attribute, attribute.value, attribute.value);\n    }\n\n    // if (\n    //     typeof newValue !== 'string' ||\n    //     newValue.startsWith('on') ||\n    //     links.includes(newValue)\n    // ) return console.warn(`XElement - dynamic attribute name \"${newValue}\" not allowed`);\n\n    // attribute.name = newValue;\n    // element.setAttribute(attribute.name, attribute.value);\n};\n\nexport const RenderWalk = function (fragment: DocumentFragment, values: Values, actions: Actions) {\n    const walker = document.createTreeWalker(document, 5, null);\n\n    walker.currentNode = fragment;\n\n    let index = 0;\n    let node: Node | null = fragment.firstChild;\n\n    while ((node = walker.nextNode()) !== null) {\n        if (node.nodeType === Node.TEXT_NODE) {\n\n            const start = node.nodeValue?.indexOf('{{') ?? -1;\n\n            if (start == -1) continue;\n\n            if (start != 0) {\n                (node as Text).splitText(start);\n                node = walker.nextNode() as Node;\n            }\n\n            const end = node.nodeValue?.indexOf('}}') ?? -1;\n\n            if (end == -1) continue;\n\n            if (end + 2 != node.nodeValue?.length) {\n                (node as Text).splitText(end + 2);\n            }\n\n            const newValue = values[index++];\n\n            if (newValue?.constructor === Object && newValue?.symbol === HtmlSymbol) {\n                const start = document.createTextNode('');\n                const end = node;\n                end.nodeValue = '';\n                end.parentNode?.insertBefore(start, end);\n                actions.push(ObjectAction.bind(null, start as Text, end as Text, []));\n            } else if (newValue?.constructor === Array) {\n                const start = document.createTextNode('');\n                const end = node;\n                end.nodeValue = '';\n                end.parentNode?.insertBefore(start, end);\n                actions.push(ArrayAction.bind(null, start as Text, end as Text, []));\n            } else {\n                (node as Text).textContent = '';\n                actions.push(StandardAction.bind(null, node as Text));\n            }\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n            const names = (node as Element).getAttributeNames();\n            for (const name of names) {\n                const value = (node as Element).getAttribute(name) ?? '';\n                const attribute = { name, value };\n\n                const dynamicName = name.includes('{{') && name.includes('}}');\n                const dynamicValue = value.includes('{{') && value.includes('}}');\n\n                if (dynamicName) {\n                    index++;\n                    (node as Element).removeAttribute(name);\n                    actions.push(\n                        AttributeName.bind(null, node as Element, attribute),\n                    );\n                }\n\n                if (dynamicValue) {\n                    index++;\n                    (node as Element).removeAttribute(name);\n                    if (name === 'value') {\n                        actions.push(\n                            AttributeValue.bind(null, node as Element, attribute),\n                        );\n                    } else if (name.startsWith('on')) {\n                        actions.push(\n                            AttributeOn.bind(null, node as Element, attribute),\n                        );\n                    } else if (includes(links, name)) {\n                        actions.push(\n                            AttributeLink.bind(null, node as Element, attribute),\n                        );\n                    } else if (includes(booleans, name)) {\n                        actions.push(\n                            AttributeBoolean.bind(null, node as Element, attribute),\n                        );\n                    } else {\n                        actions.push(\n                            AttributeStandard.bind(null, node as Element, attribute),\n                        );\n                    }\n                }\n\n                if (!dynamicName && !dynamicValue) {\n                    if (includes(links, name)) {\n                        if (dangerousLink(value)) {\n                            (node as Element).removeAttribute(name);\n                            console.warn(`XElement - attribute name \"${name}\" and value \"${value}\" not allowed`);\n                        }\n                    } else if (name.startsWith('on')) {\n                        (node as Element).removeAttribute(name);\n                        console.warn(`XElement - attribute name \"${name}\" not allowed`);\n                    }\n                }\n\n            }\n        } else {\n            console.warn('node type not handled ', node.nodeType);\n        }\n    }\n};\n\nexport default RenderWalk;\n", "export type ObserveValue = any;\nexport type ObserveTarget = any;\nexport type ObserveReceiver = any;\nexport type ObserveMethod = () => void;\nexport type ObserveKey = symbol | string;\nexport type ObserveData = Record<string, any>;\n\nconst ObserveCache = new WeakMap();\nconst ObserveNext = Promise.resolve();\n\nconst ObserveSet = function (method: ObserveMethod, target: ObserveTarget, key: ObserveKey, value: ObserveValue, receiver: ObserveReceiver) {\n    if (typeof key === 'symbol') return Reflect.set(target, key, value, receiver);\n\n    const from = Reflect.get(target, key, receiver);\n\n    if (from === value) return true;\n    if (Number.isNaN(from) && Number.isNaN(value)) return true;\n\n    if (from && (from.constructor.name === 'Object' || from.constructor.name === 'Array' || from.constructor.name === 'Function')) {\n        const cache = ObserveCache.get(from);\n        if (cache === value) return true;\n        ObserveCache.delete(from);\n    }\n\n    Reflect.set(target, key, value, receiver);\n\n    ObserveNext.then(method);\n\n    return true;\n};\n\nconst ObserveGet = function (method: ObserveMethod, target: ObserveTarget, key: ObserveKey, receiver: ObserveReceiver): ObserveValue {\n    if (typeof key === 'symbol') return Reflect.get(target, key, receiver);\n\n    const value = Reflect.get(target, key, receiver);\n\n    if (value && (value.constructor.name === 'Object' || value.constructor.name === 'Array')) {\n        const cache = ObserveCache.get(value);\n        if (cache) return cache;\n\n        const proxy = new Proxy(value, {\n            get: ObserveGet.bind(null, method),\n            set: ObserveSet.bind(null, method),\n            deleteProperty: ObserveDelete.bind(null, method),\n        });\n\n        ObserveCache.set(value, proxy);\n        return proxy;\n    }\n\n    if (value && target.constructor.name === 'Object' && (value.constructor.name === 'Function' || value.constructor.name === 'AsyncFunction')) {\n        const cache = ObserveCache.get(value);\n        if (cache) return cache;\n\n        const proxy = new Proxy(value, {\n            apply(t, _, a) {\n                return Reflect.apply(t, receiver, a);\n            },\n        });\n\n        ObserveCache.set(value, proxy);\n        return proxy;\n    }\n\n    return value;\n};\n\nconst ObserveDelete = function (method: ObserveMethod, target: ObserveTarget, key: ObserveKey) {\n    if (typeof key === 'symbol') return Reflect.deleteProperty(target, key);\n\n    const from = Reflect.get(target, key);\n    ObserveCache.delete(from);\n    Reflect.deleteProperty(target, key);\n\n    ObserveNext.then(method);\n\n    return true;\n};\n\nconst Observe = function (data: ObserveData, method: ObserveMethod) {\n    return new Proxy(data, {\n        get: ObserveGet.bind(null, method),\n        set: ObserveSet.bind(null, method),\n        deleteProperty: ObserveDelete.bind(null, method),\n    });\n};\n\nexport default Observe;\n", "export default function dash(data: string): string {\n    return data.replace(/([a-zA-Z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n", "import { replaceChildren } from './poly';\nimport render from './render';\nimport observe from './observe';\nimport dash from './dash';\n\ninterface ComponentInstance extends HTMLElement {\n\n    // adopted?:any;\n    // adopting?:any;\n    adoptedCallback?:any;\n\n    upgraded?:any;\n    upgrading?:any;\n    upgradedCallback?:any;\n\n    connected?:any;\n    connecting?:any;\n    connectedCallback?:any;\n\n    disconnected?:any;\n    disconnecting?:any;\n    disconnectedCallback?:any;\n\n    // attributed?:any;\n    // attributing?:any;\n    attributeChangedCallback?:any;\n\n    template:()=>any;\n}\n\ninterface ComponentConstructor {\n\n    tag?:string;\n    shadow?:boolean;\n    observedProperties?: string[];\n\n    create?: typeof create;\n    define?: typeof define;\n    defined?: typeof defined;\n\n    new (): ComponentInstance;\n}\n\nconst Components = new WeakMap();\n\n// const DEFINED = new WeakSet();\n// const CE = window.customElements;\n// Object.defineProperty(window, 'customElements', {\n//     get: () => ({\n//         define(name: string, constructor: CustomElementConstructor, options?: ElementDefinitionOptions) {\n//             if (constructor.prototype instanceof Component && !DEFINED.has(constructor)) {\n//                 constructor = new Proxy(constructor, {\n//                     construct(target, args, extender) {\n//                         const instance = Reflect.construct(target, args, extender);\n//                             mount(instance);\n//                         return instance;\n//                     },\n//                 });\n\n//                 DEFINED.add(constructor);\n//             }\n//             CE.define(name, constructor, options);\n//         },\n//         get: CE.get,\n//         whenDefined: CE.whenDefined,\n//     }),\n// });\n\nconst adoptedEvent = new Event('adopted');\nconst adoptingEvent = new Event('adopting');\n\nconst upgradedEvent = new Event('upgraded');\nconst upgradingEvent = new Event('upgrading');\n\nconst connectedEvent = new Event('connected');\nconst connectingEvent = new Event('connecting');\n\nconst attributedEvent = new Event('attributed');\nconst attributingEvent = new Event('attributing');\n\nconst disconnectedEvent = new Event('disconnected');\nconst disconnectingEvent = new Event('disconnecting');\n\nconst create = async function (this:ComponentConstructor) {\n    const tag = this.tag ?? dash(this.name);\n\n    if (!customElements.get(tag)) {\n        customElements.define(tag, this);\n    }\n\n    const element = document.createElement(tag) as ComponentInstance;\n    // await mount(element);\n\n    return element;\n};\n\nconst define = function (this:ComponentConstructor) {\n    const tag = this.tag ?? dash(this.name);\n    if (!customElements.get(tag)) return;\n    customElements.define(tag, this);\n};\n\nconst defined = async function (this:ComponentConstructor) {\n    const tag = this.tag ?? dash(this.name);\n    return customElements.whenDefined(tag);\n};\n\nconst upgrade = async function (self:ComponentInstance) {\n    const instance = Components.get(self);\n\n    if (instance.busy) return;\n    else instance.busy = true;\n\n    // await sleep(50);\n    self.dispatchEvent(upgradingEvent);\n    await self.upgrading?.()?.catch(console.error);\n\n    const result = self.template();\n\n    const length = instance.actions.length ?? 0;\n    for (let index = 0; index < length; index++) {\n        instance.actions[index](instance.expressions[index], result.expressions[index]);\n    }\n\n    instance.expressions.splice(0, -1, ...result.expressions);\n\n    instance.busy = false;\n\n    await self.upgraded?.()?.catch(console.error);\n    self.dispatchEvent(upgradedEvent);\n};\n\nconst mount = async function (self:ComponentInstance) {\n    const instance = Components.get(self);\n\n    if (instance.mounted) return;\n    else instance.mounted = true;\n\n    self.dispatchEvent(upgradingEvent);\n    await self.upgrading?.()?.catch(console.error);\n\n    const result = self.template();\n\n    instance.expressions.splice(0, -1, ...result.values);\n    instance.fragment = result.template.content.cloneNode(true);\n\n    render(instance.fragment, instance.expressions, instance.actions);\n\n    document.adoptNode(instance.fragment);\n\n    const length = instance.actions.length;\n    for (let index = 0; index < length; index++) {\n        instance.actions[index](undefined, instance.expressions[index]);\n    }\n\n    replaceChildren(instance.root, instance.fragment);\n\n    await self.upgraded?.()?.catch(console.error);\n    self.dispatchEvent(upgradedEvent);\n};\n\n// const get = function (t:any, k:any, r:any){\n//     console.log('get', k);\n//     return Reflect.get(t, k, r);\n// };\n\n// const set = function (t:any, k:any, v:any, r:any) {\n//     console.log('set', k, v);\n//     return Reflect.set(t,k,v,r);\n// };\n\nconst construct = function (t:any, a:any, e:any) {\n    const self = Reflect.construct(t, a, e) as ComponentInstance;\n    const constructor = self.constructor as ComponentConstructor;\n\n    const shadow = constructor.shadow;\n    const tag = constructor.tag ?? dash(constructor.name);\n    const observedProperties = constructor.observedProperties;\n    const prototype = Object.getPrototypeOf(self);\n\n    const instance:any = {\n        tag,\n        context: {},\n        busy: false,\n        actions: [],\n        mounted: false,\n        expressions: [],\n        fragment: undefined,\n        shadow: shadow || false,\n        root: shadow ?  self.shadowRoot ?? self.attachShadow({ mode: 'open' }) : self\n    };\n\n    instance.observed = observe(instance.context, ()=> upgrade(self)),\n\n    Components.set(self, instance);\n\n    const properties = observedProperties ?\n        observedProperties ?? [] :\n        [ ...Object.getOwnPropertyNames(self),\n            ...Object.getOwnPropertyNames(prototype) ];\n\n    for (const property of properties) {\n\n        if (\n            'attributeChangedCallback' === property ||\n            'attributing' === property ||\n            'attributed' === property ||\n\n            'adoptedCallback' === property ||\n            'adopting' === property ||\n            'adopted' === property ||\n\n            'disconnectedCallback' === property ||\n            'disconnecting' === property ||\n            'disconnected' === property ||\n\n            'connectedCallback' === property ||\n            'connecting' === property ||\n            'connected' === property ||\n\n            'upgradedCallback' === property ||\n            'upgrading' === property ||\n            'upgraded' === property ||\n\n            'constructor' === property ||\n            'template' === property\n\n        ) continue;\n\n        const descriptor = Object.getOwnPropertyDescriptor(self, property) ?? Object.getOwnPropertyDescriptor(prototype, property);\n\n        if (!descriptor) continue;\n        if (!descriptor.configurable) continue;\n\n        Object.defineProperty(instance.context, property, { ...descriptor, enumerable: false });\n\n        Object.defineProperty(self, property, {\n            enumerable: descriptor.enumerable,\n            configurable: descriptor.configurable,\n            get() {\n                return instance.observed[property];\n            },\n            set(value) {\n                instance.observed[property] = value;\n                // upgrade(self);\n            }\n        });\n\n    }\n\n    // if (tag) {\n        // customElements.upgrade(self);\n        // customElements.whenDefined(tag).then(()=> mount(self));\n    // }\n\n    return self;\n};\n\nexport default function component (Class:ComponentConstructor):ComponentConstructor {\n    Class.create = create;\n    Class.define = define;\n    Class.defined = defined;\n\n    const tag = Class.tag ?? dash(Class.name);\n    const upgradedCallback = Class.prototype.upgradedCallback;\n    const connectedCallback = Class.prototype.connectedCallback;\n    const disconnectedCallback = Class.prototype.disconnectedCallback;\n\n    Class.prototype.upgradedCallback = async function () {\n        this.dispatchEvent(upgradingEvent);\n        await this.upgrading?.();\n        await this.upgraded?.();\n        this.dispatchEvent(upgradedEvent);\n        await upgradedCallback?.();\n    };\n\n    Class.prototype.connectedCallback = async function () {\n        this.dispatchEvent(connectingEvent);\n        await this.connecting?.();\n        await mount(this);\n        await this.connected?.();\n        this.dispatchEvent(connectedEvent);\n        await connectedCallback?.();\n    };\n\n    Class.prototype.disconnectedCallback = async function () {\n        this.dispatchEvent(disconnectingEvent);\n        await this.disconnecting?.();\n        await this.disconnected?.();\n        this.dispatchEvent(disconnectedEvent);\n        await disconnectedCallback?.();\n    };\n\n    const Wrap = new Proxy(Class, { construct });\n    // const Wrap = new Proxy(Class, { get, set, construct });\n\n    if (tag && !customElements.get(tag)) {\n        customElements.define(tag, Wrap as any);\n    }\n\n    return Wrap;\n};\n\n// component(\n// class XTest extends HTMLElement {\n//     // static tag = 'x-test';\n//     // static shadow = true;\n//     // static observedProperties = ['message'];\n\n//     message = 'hello world';\n\n//     template = () => html`\n//         <h1>${this.message}</h1>\n//         <input value=${this.message} oninput=${(e:any)=>this.message=e.target.value} />\n//     `;\n\n//     connectedCallback(){console.log('connectedCallback');}\n//     disconnectedCallback(){console.log('disconnectedCallback');}\n//     connecting(){console.log('connecting');}\n//     connected(){console.log('connected');}\n//     upgrading(){console.log('upgrading');}\n//     upgraded(){console.log('upgraded');}\n//     disconnecting(){console.log('disconnecting');}\n//     disconnected(){console.log('disconnected');}\n// }\n// );\n\n// const e = document.createElement('x-test');\n// console.log(e.outerHTML);\n// document.body.append(e);\n", "import { replaceChildren  } from './poly';\n\ntype Module = { default: CustomElementConstructor }\ntype Handler = () => Module | CustomElementConstructor | Promise<CustomElementConstructor | Module>;\n\ntype Route = {\n    path: string;\n    instance: any;\n    handler: Handler;\n    container: Element;\n};\n\nconst alls: Array<Route> = [];\nconst routes: Array<Route> = [];\n\nconst notModule = function (module:any) {\n    return (!Object.keys(module).length) || (!!module.default && typeof module.default === 'object' && !Object.keys(module.default).length);\n};\n\nconst transition = async function (route: Route) {\n    if (route.instance) {\n        replaceChildren(route.container, route.instance);\n    } else {\n        const tag = 'x-' + (route.path.replace(/\\/+/g,'-').replace(/^-|-$|\\.*/g, '') || 'root');\n        const result = await route.handler() as any;\n        const constructor = notModule(result) ? result : result.default;\n        if (!customElements.get(tag)) {\n            customElements.define(tag, constructor);\n        }\n        route.instance = document.createElement(tag);\n        replaceChildren(route.container, route.instance);\n    }\n};\n\nconst navigate = function (event?: any) {\n    if (event && 'canIntercept' in event && event.canIntercept === false) return;\n    if (event && 'canTransition' in event && event.canTransition === false) return;\n\n    const destination = new URL(event?.destination.url ?? location.href);\n    const base = new URL(document.querySelector('base')?.href ?? location.origin);\n\n    base.hash = '';\n    base.search = '';\n    destination.hash = '';\n    destination.search = '';\n\n    const pathname = destination.href.replace(base.href, '/');\n    const transitions: Array<Route> = [];\n\n    for (const route of routes) {\n        if (route.path !== pathname) continue;\n        transitions.push(route);\n    }\n\n    for (const all of alls) {\n        let has = false;\n\n        for (const transition of transitions) {\n            if (transition.container === all.container) {\n                has = true;\n                break;\n            }\n        }\n\n        if (has) continue;\n\n        transitions.push(all);\n    }\n\n    if (event?.intercept) {\n        return event.intercept({ handler: () => transitions.map((route) => transition(route)) });\n    } else if (event?.transitionWhile) {\n        return event.transitionWhile(transitions.map((route) => transition(route)));\n    } else {\n        transitions.map((route) => transition(route));\n    }\n};\n\nconst router = function (path: string, container: Element, handler: Handler) {\n    if (!path) throw new Error('XElement - router path required');\n    if (!handler) throw new Error('XElement - router handler required');\n    if (!container) throw new Error('XElement - router container required');\n\n    if (path === '/*') {\n        for (const all of alls) {\n            if (all.path === path && all.container === container) {\n                throw new Error('XElement - router duplicate path on container');\n            }\n        }\n\n        alls.push({ path, container, handler, instance: undefined });\n    } else {\n        for (const route of routes) {\n            if (route.path === path && route.container === container) {\n                throw new Error('XElement - router duplicate path on container');\n            }\n        }\n\n        routes.push({ path, container, handler, instance: undefined });\n    }\n\n    Reflect.get(window, 'navigation').addEventListener('navigate', navigate);\n};\n\nexport default router;\n", "import Component from './component';\n// import Schedule from './schedule';\n// import Context from './context';\n// import Define from './define';\nimport Router from './router';\nimport Render from './render';\n// import Patch from './patch';\n// import Mount from './mount';\nimport html from './html';\n\nexport { Component };\nexport { Component as component };\n\n// export { Schedule };\n// export { Schedule as schedule };\n\n// export { Context };\n// export { Context as context };\n\n// export { Define };\n// export { Define as define };\n\nexport { Router };\nexport { Router as router };\n\nexport { Render };\nexport { Render as render };\n\n// export { Patch };\n// export { Patch as patch };\n\n// export { Mount };\n// export { Mount as mount };\n\nexport { html };\n\nconst Index = {\n    Component,\n    // Schedule,\n    // Context,\n    // Define,\n    Router,\n    Render,\n    // Patch,\n    // Mount,\n    component: Component,\n    // schedule: Schedule,\n    // context: Context,\n    // define: Define,\n    router: Router,\n    render: Render,\n    // patch: Patch,\n    // mount: Mount,\n    html\n};\n\nexport default Index;\n"],
  "mappings": "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",
  "names": ["replaceChildren", "element", "nodes", "node", "includes", "item", "search", "policy", "data", "createHTML", "display", "data", "booleans", "booleans_default", "HtmlCache", "HtmlSymbol", "html", "strings", "expressions", "template", "data", "length", "index", "createHTML", "links", "safePattern", "dangerousLink", "data", "ObjectAction", "start", "end", "actions", "oldValue", "newValue", "_a", "_b", "_c", "_d", "next", "node", "fragment", "RenderWalk", "l", "i", "ArrayAction", "_e", "_f", "_g", "oldLength", "newLength", "common", "template", "HtmlSymbol", "action", "StandardAction", "removes", "AttributeOn", "element", "attribute", "AttributeBoolean", "value", "AttributeValue", "display", "AttributeLink", "AttributeStandard", "AttributeName", "name", "includes", "booleans_default", "values", "_h", "walker", "index", "names", "dynamicName", "dynamicValue", "render_default", "ObserveCache", "ObserveNext", "ObserveSet", "method", "target", "key", "value", "receiver", "from", "ObserveGet", "cache", "proxy", "ObserveDelete", "t", "_", "a", "Observe", "data", "observe_default", "dash", "data", "Components", "adoptedEvent", "adoptingEvent", "upgradedEvent", "upgradingEvent", "connectedEvent", "connectingEvent", "attributedEvent", "attributingEvent", "disconnectedEvent", "disconnectingEvent", "create", "__async", "_a", "tag", "dash", "define", "defined", "upgrade", "self", "_b", "_c", "_d", "_e", "instance", "result", "length", "index", "mount", "render_default", "replaceChildren", "construct", "t", "a", "e", "constructor", "shadow", "observedProperties", "prototype", "observe_default", "properties", "property", "descriptor", "__spreadProps", "__spreadValues", "value", "component", "Class", "upgradedCallback", "connectedCallback", "disconnectedCallback", "Wrap", "alls", "routes", "notModule", "module", "transition", "route", "__async", "replaceChildren", "tag", "result", "constructor", "navigate", "event", "_a", "_b", "_c", "destination", "base", "pathname", "transitions", "all", "has", "router", "path", "container", "handler", "router_default", "Index", "component", "router_default", "render_default", "html", "src_default"]
}
