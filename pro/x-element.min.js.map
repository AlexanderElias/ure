{
  "version": 3,
  "sources": ["../src/define.ts", "../src/display.ts", "../src/mark.ts", "../src/poly.ts", "../src/html.ts", "../src/render.ts", "../src/context.ts", "../src/dash.ts", "../src/events.ts", "../src/component.ts", "../src/router.ts", "../src/index.ts"],
  "sourcesContent": ["\nexport default function define (name: string, constructor: CustomElementConstructor) {\n    if (!customElements.get(name)) {\n        customElements.define(name, constructor);\n    }\n}", "\nexport default function display (data: any): string {\n    switch (`${data}`) {\n        case 'NaN': return '';\n        case 'null': return '';\n        case 'undefined': return '';\n    }\n    switch (typeof data) {\n        case 'string': return data;\n        case 'number': return `${data}`;\n        case 'bigint': return `${data}`;\n        case 'boolean': return `${data}`;\n        case 'function': return `${data()}`;\n        case 'symbol': return String(data);\n        case 'object': return JSON.stringify(data);\n    }\n    throw new Error('XElement - display type not handled');\n}\n", "\nexport default () => Math.floor(Math.random() * Date.now());", "\nexport const replaceChildren = function (element: Element | Document | DocumentFragment, ...nodes: (Node | string)[]): void {\n\n    while (element.lastChild) {\n        element.removeChild(element.lastChild);\n\n    }\n\n    if (nodes?.length) {\n        for (const node of nodes) {\n            element.appendChild(\n                typeof node === 'string' ?\n                    (element.ownerDocument as Document).createTextNode(node) :\n                    node\n            );\n        }\n    }\n\n};\n\nexport const includes = function (item: string | Array<any>, search: any) {\n    return item.indexOf(search) !== -1;\n};\n\nconst policy = 'trustedTypes' in window ? (window as any).trustedTypes.createPolicy('x-element', { createHTML: (data: string) => data }) : null;\nexport const createHTML = function (data: string) {\n    if (policy) {\n        return policy.createHTML(data);\n    } else {\n        return data;\n    }\n};\n\nexport const hasOwn = function (object: any, key: any) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n};", "import mark from './mark';\nimport { createHTML } from './poly';\nimport { Expressions, HTML } from './types';\n// import parse from './parse';\n\nexport const symbol = Symbol('html');\nconst cache: WeakMap<TemplateStringsArray, [ HTMLTemplateElement, string ]> = new WeakMap();\n\nexport default function html (strings: TemplateStringsArray, ...expressions: Expressions): HTML {\n    const value = cache.get(strings);\n    if (value) {\n        const [ template, marker ] = value;\n\n        return { strings, template, expressions, symbol, marker };\n    } else {\n        const marker = `X-${mark()}-X`;\n\n        let data = '';\n\n        const length = strings.length - 1;\n\n        for (let index = 0; index < length; index++) {\n            data += `${strings[ index ]}${marker}`;\n        }\n\n        data += strings[ length ];\n\n        const template = document.createElement('template');\n        template.innerHTML = createHTML(data);\n\n        cache.set(strings, [ template, marker ]);\n\n        return { strings, template, expressions, symbol, marker };\n    }\n}\n", "import display from './display';\nimport { symbol } from './html';\nimport { includes } from './poly';\nimport { Actions } from './types';\n\nconst filter = NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_TEXT;\n\nconst links = [ 'src', 'href', 'xlink:href' ];\nconst safePattern = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i;\n\nconst dangerousLink = function (data: string) {\n    if (data === '') return false;\n    if (typeof data !== 'string') return false;\n    return safePattern.test(data) ? false : true;\n};\n\nconst removeBetween = function (start: Node, end: Node) {\n    let node = end.previousSibling;\n    while (node !== start) {\n        node?.parentNode?.removeChild(node);\n        node = end.previousSibling;\n    }\n};\n\nconst ElementAction = function (this: {\n    start: Text;\n    end: Text;\n    actions: Actions;\n}, source: any, target: any) {\n\n    if (target?.symbol === symbol) {\n\n        source = source ?? {};\n        target = target ?? {};\n\n        if (source.strings === target.strings) {\n\n            const l = this.actions.length;\n            for (let i = 0; i < l; i++) {\n                this.actions[ i ](source.expressions[ i ], target.expressions[ i ]);\n            }\n\n        } else {\n            this.actions.length = 0;\n            const fragment = target.template.content.cloneNode(true);\n            Render(fragment, this.actions, target.marker);\n\n            const l = this.actions.length;\n            for (let i = 0; i < l; i++) {\n                this.actions[ i ](source.expressions?.[ i ], target.expressions[ i ]);\n            }\n\n            document.adoptNode(fragment);\n\n            removeBetween(this.start, this.end);\n            this.end.parentNode?.insertBefore(fragment, this.end);\n        }\n\n    } else if (target?.constructor === Array) {\n\n        source = source ?? [];\n        target = target ?? [];\n\n        const oldLength = source.length;\n        const newLength = target.length;\n        const common = Math.min(oldLength, newLength);\n\n        for (let i = 0; i < common; i++) {\n            this.actions[ i ](source[ i ], target[ i ]);\n        }\n\n        if (oldLength < newLength) {\n            const template = document.createElement('template');\n\n            for (let i = oldLength; i < newLength; i++) {\n\n                const startChild = document.createTextNode('');\n                const endChild = document.createTextNode('');\n                const action = ElementAction.bind({\n                    start: startChild,\n                    end: endChild,\n                    actions: []\n                });\n\n                template.content.appendChild(startChild);\n                template.content.appendChild(endChild);\n\n                this.actions.push(action);\n                action(source[ i ], target[ i ]);\n            }\n\n            this.end.parentNode?.insertBefore(template.content, this.end);\n        } else if (oldLength > newLength) {\n\n            for (let i = oldLength - 1; i > newLength - 1; i--) {\n                if (source[ i ]?.symbol === symbol) {\n                    const { template } = source[ i ];\n                    let removes = template.content.childNodes.length + 2;\n                    while (removes--) this.end.parentNode?.removeChild(this.end.previousSibling as Node);\n                } else {\n                    this.end.parentNode?.removeChild(this.end.previousSibling as Node);\n                    this.end.parentNode?.removeChild(this.end.previousSibling as Node);\n                    this.end.parentNode?.removeChild(this.end.previousSibling as Node);\n                }\n            }\n\n            this.actions.length = newLength;\n        }\n\n    } else {\n        if (source === target) return;\n\n        if (typeof source !== typeof target) {\n            while (this.end.previousSibling !== this.start) {\n                this.end.parentNode?.removeChild(this.end.previousSibling as ChildNode);\n            }\n        }\n\n        let node;\n        if (this.end.previousSibling === this.start) {\n            node = document.createTextNode(display(target));\n            // node = document.createTextNode(target);\n            this.end.parentNode?.insertBefore(node, this.end);\n        } else {\n            if (this.end.previousSibling?.nodeType === Node.TEXT_NODE) {\n                node = this.end.previousSibling;\n                node.textContent = display(target);\n                // node.textContent = target;\n            } else {\n                node = document.createTextNode(display(target));\n                // node = document.createTextNode(target);\n                this.end.parentNode?.removeChild(this.end.previousSibling as ChildNode);\n                this.end.parentNode?.insertBefore(node, this.end);\n            }\n        }\n\n    }\n\n};\n\nconst AttributeNameAction = function (this: {\n    element: Element,\n    name: string,\n    value: any,\n}, source: any, target: any) {\n    if (source === target) return;\n\n    if (source?.startsWith('on') && typeof this.value === 'function') {\n        this.element.removeEventListener(source.slice(2), this.value);\n    }\n\n    Reflect.set(this.element, source, undefined);\n    this.element.removeAttribute(source);\n    this.name = target?.toLowerCase();\n\n    if (this.name) {\n        this.element.setAttribute(this.name, '');\n    }\n\n};\n\nconst AttributeValueAction = function (this: {\n    element: Element,\n    name: string,\n    value: any,\n}, source: any, target: any) {\n    if (source === target) return;\n\n    if (\n        this.name === 'value'\n    ) {\n        this.value = display(target);\n        if (!this.name) return;\n        Reflect.set(this.element, this.name, this.value);\n        this.element.setAttribute(this.name, this.value);\n    } else if (\n        this.name.startsWith('on')\n    ) {\n        // if (source?.toString() === target?.toString()) return;\n        if (!this.name) return;\n\n        if (typeof this.value === 'function') {\n            this.element.removeEventListener(this.name.slice(2), this.value, true);\n        }\n\n        this.value = target;\n        if (typeof this.value !== 'function') return console.warn(`XElement - attribute name \"${this.name}\" and value \"${this.value}\" not allowed`);\n\n        this.element.addEventListener(this.name.slice(2), this.value, true);\n    } else if (\n        includes(links, this.name)\n    ) {\n        this.value = encodeURI(target);\n\n        if (!this.name) return;\n\n        if (dangerousLink(this.value)) {\n            this.element.removeAttribute(this.name);\n            console.warn(`XElement - attribute name \"${this.name}\" and value \"${this.value}\" not allowed`);\n            return;\n        }\n\n        Reflect.set(this.element, this.name, this.value);\n        this.element.setAttribute(this.name, this.value);\n    } else {\n        this.value = target;\n        if (!this.name) return;\n        Reflect.set(this.element, this.name, this.value);\n        this.element.setAttribute(this.name, this.value);\n    }\n};\n\nconst TagAction = function (this: {\n    element: Element,\n    holder: Text,\n}, source: any, target: any) {\n    if (source === target) return;\n\n    const oldElement = this.element;\n\n    if (target) {\n        oldElement.parentNode?.removeChild(oldElement);\n\n        const newElement = document.createElement(target) as Element;\n\n        while (oldElement.firstChild) newElement.appendChild(oldElement.firstChild);\n\n        if (oldElement.nodeType === Node.ELEMENT_NODE) {\n            const attributeNames = (oldElement as Element).getAttributeNames();\n            for (const attributeName of attributeNames) {\n                const attributeValue = (oldElement as Element).getAttribute(attributeName) ?? '';\n                newElement.setAttribute(attributeName, attributeValue);\n            }\n        }\n\n        this.holder.parentNode?.insertBefore(newElement, this.holder);\n        this.element = newElement;\n    } else {\n        oldElement.parentNode?.removeChild(oldElement);\n        this.element = oldElement;\n    }\n\n};\n\nexport const Render = function (fragment: DocumentFragment, actions: Actions, marker: string) {\n    const holders = new WeakSet();\n    const walker = document.createTreeWalker(document, filter, null);\n\n    walker.currentNode = fragment;\n\n    let node: Node | null = fragment.firstChild;\n\n    while (node = walker.nextNode()) {\n\n        if (holders.has(node.previousSibling as Node)) {\n            holders.delete(node.previousSibling as Node);\n            actions.push(() => undefined);\n        }\n\n        if (node.nodeType === Node.TEXT_NODE) {\n\n            const startIndex = node.nodeValue?.indexOf(marker) ?? -1;\n            if (startIndex === -1) continue;\n\n            if (startIndex !== 0) {\n                (node as Text).splitText(startIndex);\n                node = walker.nextNode() as Node;\n            }\n\n            const endIndex = marker.length;\n            if (endIndex !== node.nodeValue?.length) {\n                (node as Text).splitText(endIndex);\n            }\n\n            const start = document.createTextNode('');\n            const end = node as Text;\n\n            end.textContent = '';\n            end.parentNode?.insertBefore(start, end);\n\n            actions.push(ElementAction.bind({ marker, start, end, actions: [], }));\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n\n            if (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE') {\n                walker.nextSibling();\n            }\n\n            const tMeta: any = {\n                element: node as Element,\n            };\n\n            if (node.nodeName === marker) {\n                holders.add(node);\n                tMeta.holder = document.createTextNode('');\n                node.parentNode?.insertBefore(tMeta.holder, node);\n                actions.push(TagAction.bind(tMeta));\n            }\n\n            const names = (node as Element).getAttributeNames();\n            for (const name of names) {\n                const value = (node as Element).getAttribute(name) ?? '';\n                const dynamicName = (name.toUpperCase()).includes(marker);\n                const dynamicValue = value.includes(marker);\n\n                if (dynamicName || dynamicValue) {\n\n                    const aMeta = {\n                        name,\n                        value,\n                        previous: undefined,\n                        get element () {\n                            return tMeta.element;\n                        },\n                    };\n\n                    if (dynamicName) {\n                        (node as Element).removeAttribute(name);\n                        actions.push(AttributeNameAction.bind(aMeta));\n                    }\n\n                    if (dynamicValue) {\n                        (node as Element).removeAttribute(name);\n                        actions.push(AttributeValueAction.bind(aMeta));\n                    }\n\n                } else {\n                    if (includes(links, name)) {\n                        if (dangerousLink(value)) {\n                            (node as Element).removeAttribute(name);\n                            console.warn(`XElement - attribute name \"${name}\" and value \"${value}\" not allowed`);\n                        }\n                    } else if (name.startsWith('on')) {\n                        (node as Element).removeAttribute(name);\n                        console.warn(`XElement - attribute name \"${name}\" not allowed`);\n                    }\n                }\n            }\n        } else {\n            console.warn(`XElement - node type \"${node.nodeType}\" not handled`);\n        }\n    }\n};\n\nexport default Render;\n", "type ContextValue = any;\ntype ContextTarget = any;\ntype ContextReceiver = any;\ntype ContextMethod = () => void;\ntype ContextKey = symbol | string;\ntype ContextData = Record<string, any>;\n\n// const ContextApply = function (target: ContextTarget, receiver: ContextReceiver, args: any[]) {\n//     return Reflect.apply(target, receiver, args);\n// };\n\nconst ContextSet = function (method: ContextMethod, target: ContextTarget, key: ContextKey, value: ContextValue, receiver: ContextReceiver) {\n    if (typeof key === 'symbol') return Reflect.set(target, key, value, receiver);\n\n    const from = Reflect.get(target, key, receiver);\n\n    if (from === value) return true;\n    if (Number.isNaN(from) && Number.isNaN(value)) return true;\n\n    Reflect.set(target, key, value, receiver);\n\n    method();\n\n    return true;\n};\n\nconst ContextGet = function (method: ContextMethod, target: ContextTarget, key: ContextKey, receiver: ContextReceiver): ContextValue {\n    if (typeof key === 'symbol') return Reflect.get(target, key, receiver);\n\n    const value = Reflect.get(target, key, receiver);\n\n    if (value && typeof value == 'function') {\n        return new Proxy(value, {\n            apply (t, _, a) {\n                return Reflect.apply(t, receiver, a);\n                // return Reflect.apply(t, target, a);\n                // return Reflect.apply(t.bind(target), receiver, a);\n            }\n        });\n    }\n\n    if (value && typeof value == 'object') {\n        return new Proxy(value, {\n            get: ContextGet.bind(null, method),\n            set: ContextSet.bind(null, method),\n            deleteProperty: ContextDelete.bind(null, method),\n        });\n    }\n\n    return value;\n};\n\nconst ContextDelete = function (method: ContextMethod, target: ContextTarget, key: ContextKey) {\n    if (typeof key === 'symbol') return Reflect.deleteProperty(target, key);\n\n    Reflect.deleteProperty(target, key);\n\n    method();\n\n    return true;\n};\n\nconst Context = function (data: ContextData, method: ContextMethod): Record<any, any> {\n    return new Proxy(data, {\n        get: ContextGet.bind(null, method),\n        set: ContextSet.bind(null, method),\n        deleteProperty: ContextDelete.bind(null, method),\n    });\n};\n\nexport default Context;\n", "\nexport default function dash (data: string): string {\n    data = data.replace(/([a-zA-Z])([A-Z])/g, '$1-$2');\n    data = data.toLowerCase();\n    data = data.includes('-') ? data : `x-${data}`;\n    return data;\n}\n", "\nexport const adoptedEvent = new Event('adopted');\nexport const adoptingEvent = new Event('adopting');\n\nexport const upgradedEvent = new Event('upgraded');\nexport const upgradingEvent = new Event('upgrading');\n\nexport const creatingEvent = new Event('creating');\nexport const createdEvent = new Event('created');\n\nexport const renderingEvent = new Event('rendering');\nexport const renderedEvent = new Event('rendered');\n\nexport const connectedEvent = new Event('connected');\nexport const connectingEvent = new Event('connecting');\n\nexport const attributedEvent = new Event('attributed');\nexport const attributingEvent = new Event('attributing');\n\nexport const disconnectedEvent = new Event('disconnected');\nexport const disconnectingEvent = new Event('disconnecting');\n", "import define from './define';\nimport render from './render';\nimport context from './context';\nimport html from './html';\nimport dash from './dash';\n\nimport {\n    HTML,\n    Actions,\n    Expressions,\n} from './types';\n\nimport {\n    createdEvent,\n    creatingEvent,\n\n    renderedEvent,\n    renderingEvent,\n\n    adoptedEvent,\n    adoptingEvent,\n\n    connectedEvent,\n    connectingEvent,\n\n    attributedEvent,\n    attributingEvent,\n\n    disconnectedEvent,\n    disconnectingEvent,\n} from './events';\n\nconst task = Symbol('Task');\nconst create = Symbol('Create');\nconst setup = Symbol('Setup');\nconst update = Symbol('Update');\n\nexport default class Component extends HTMLElement {\n\n    static html = html;\n\n    static define (tag: string = this.tag ?? this.name) {\n        tag = dash(tag);\n        define(tag, this);\n        return this;\n    }\n\n    static async create (tag: string = this.tag ?? this.name) {\n        tag = dash(tag);\n        define(tag, this);\n        const instance = document.createElement(tag);\n        await (instance as Component)[ create ];\n        return instance;\n    }\n\n    declare static tag?: string;\n    declare static shadow?: boolean;\n    declare static mode?: 'open' | 'closed';\n    declare static observedProperties?: Array<string>;\n\n    declare render?: (context: Record<any, any>) => HTML | Promise<HTML>;\n\n    declare created?: (context: Record<any, any>) => void | Promise<void>;\n    declare rendered?: (context: Record<any, any>) => void | Promise<void>;\n    declare connected?: (context: Record<any, any>) => void | Promise<void>;\n    declare adopted?: (context: Record<any, any>) => void | Promise<void>;\n    declare disconnected?: (context: Record<any, any>) => void | Promise<void>;\n    declare attribute?: (name: string, oldValue: string, newValue: string) => void | Promise<void>;\n\n    #context: Record<any, any> = {};\n    #root: Element | ShadowRoot;\n\n    #marker: string = '';\n    #actions: Actions = [];\n    #expressions: Expressions = [];\n\n    #busy: boolean = false;\n    #restart: boolean = false;\n    #created: boolean = false;\n    [ task ]: Promise<void> = Promise.resolve();\n\n    constructor () {\n        super();\n\n        const constructor = this.constructor as typeof Component;\n        const shadow = constructor.shadow;\n        if (shadow && !this.shadowRoot) {\n            const mode = constructor.mode || 'open';\n            this.attachShadow({ mode });\n        }\n\n        this.#root = this.shadowRoot ?? this;\n    }\n\n    async attributeChangedCallback (name: string, oldValue: string, newValue: string) {\n        this.dispatchEvent(attributingEvent);\n        await this.attribute?.(name, oldValue, newValue)?.catch(console.error);\n        this.dispatchEvent(attributedEvent);\n    }\n\n    async adoptedCallback () {\n        this.dispatchEvent(adoptingEvent);\n        await this.adopted?.(this.#context)?.catch(console.error);\n        this.dispatchEvent(adoptedEvent);\n    }\n\n    async connectedCallback () {\n        if (!this.#created) {\n            await this[ create ]();\n        } else {\n            this.dispatchEvent(connectingEvent);\n            await this.connected?.(this.#context)?.catch(console.error);\n            this.dispatchEvent(connectedEvent);\n        }\n    }\n\n    async disconnectedCallback () {\n        this.dispatchEvent(disconnectingEvent);\n        await this.disconnected?.(this.#context)?.catch(console.error);\n        this.dispatchEvent(disconnectedEvent);\n    }\n\n    async [ create ] () {\n        this.#created = true;\n        this.#busy = true;\n\n        await this[ setup ]();\n\n        this.dispatchEvent(creatingEvent);\n        await this.created?.(this.#context);\n        this.dispatchEvent(createdEvent);\n\n        this.dispatchEvent(connectingEvent);\n        await this.connected?.(this.#context)?.catch(console.error);\n        this.dispatchEvent(connectedEvent);\n\n        this.#busy = false;\n        this.#restart = false;\n        await this[ update ]();\n    }\n\n    async [ update ] () {\n\n        if (this.#busy) {\n            this.#restart = true;\n            return this[ task ];\n        }\n\n        this.#busy = true;\n\n        this[ task ] = this[ task ].then(async () => {\n            // await new Promise((resolve) => {\n            // window.requestIdleCallback(async () => {\n\n            this.dispatchEvent(renderingEvent);\n            const template = await this.render?.(this.#context);\n\n            if (template) {\n                for (let index = 0; index < this.#actions.length; index++) {\n\n                    if (this.#restart) {\n                        await Promise.resolve().then().catch(console.error);\n                        index = -1;\n                        this.#restart = false;\n                        continue;\n                    }\n\n                    const newExpression = template.expressions[ index ];\n                    const oldExpression = this.#expressions[ index ];\n\n                    try {\n                        this.#actions[ index ](oldExpression, newExpression);\n                    } catch (error) {\n                        console.error(error);\n                    }\n\n                    this.#expressions[ index ] = template.expressions[ index ];\n                }\n            }\n\n            this.#busy = false;\n\n            await this.rendered?.(this.#context);\n            this.dispatchEvent(renderedEvent);\n\n            // resolve(undefined);\n            // });\n            // });\n        }).catch(console.error);\n\n        return this[ task ];\n    }\n\n    async [ setup ] () {\n\n        const constructor = this.constructor as typeof Component;\n        const observedProperties = constructor.observedProperties;\n        const prototype = Object.getPrototypeOf(this);\n\n        const properties = observedProperties ?\n            observedProperties ?? [] :\n            [ ...Object.getOwnPropertyNames(this),\n            ...Object.getOwnPropertyNames(prototype) ];\n\n        for (const property of properties) {\n\n            if (\n                'attributeChangedCallback' === property ||\n                'disconnectedCallback' === property ||\n                'connectedCallback' === property ||\n                'adoptedCallback' === property ||\n                'constructor' === property ||\n                'disconnected' === property ||\n                'attribute' === property ||\n                'connected' === property ||\n                'rendered' === property ||\n                'created' === property ||\n                'adopted' === property ||\n                'render' === property ||\n                'setup' === property\n            ) continue;\n\n            const descriptor = Object.getOwnPropertyDescriptor(this, property) ?? Object.getOwnPropertyDescriptor(prototype, property);\n\n            if (!descriptor) continue;\n            if (!descriptor.configurable) continue;\n\n            if (typeof descriptor.value === 'function') descriptor.value = descriptor.value.bind(this);\n            if (typeof descriptor.get === 'function') descriptor.get = descriptor.get.bind(this);\n            if (typeof descriptor.set === 'function') descriptor.set = descriptor.set.bind(this);\n\n            Object.defineProperty(this.#context, property, descriptor);\n\n            Object.defineProperty(this, property, {\n                enumerable: descriptor.enumerable,\n                configurable: false,\n                // configurable: descriptor.configurable,\n                get () {\n                    return (this.#context as Record<any, any>)[ property ];\n                },\n                set (value) {\n                    (this.#context as Record<any, any>)[ property ] = value;\n                    this[ update ]();\n                }\n            });\n\n        }\n\n        this.#context = context(this.#context, this[ update ].bind(this));\n\n        // this.dispatchEvent(renderingEvent);\n\n        const template = await this.render?.(this.#context);\n        if (template) {\n\n            const fragment = template.template.content.cloneNode(true) as DocumentFragment;\n            this.#marker = template.marker;\n            this.#expressions = template.expressions;\n\n            render(fragment, this.#actions, this.#marker);\n\n            for (let index = 0; index < this.#actions.length; index++) {\n                const newExpression = template.expressions[ index ];\n                try {\n                    this.#actions[ index ](undefined, newExpression);\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n\n            document.adoptNode(fragment);\n\n            this.#root.appendChild(fragment);\n        }\n\n        // await this.rendered?.(this.#context);\n        // this.dispatchEvent(renderedEvent);\n\n        // this.#restart = false;\n        // this.#busy = false;\n        // await this[ update ]();\n\n        // this.dispatchEvent(creatingEvent);\n        // await this.created?.(this.#context);\n        // this.dispatchEvent(createdEvent);\n    }\n\n}\n", "import { Route, Handler, Module } from './types';\nimport { replaceChildren } from './poly';\nimport component from './component';\nimport define from './define';\nimport dash from './dash';\n\nconst alls: Array<Route> = [];\nconst routes: Array<Route> = [];\n\nconst transition = async function (route: Route) {\n    if (route.instance) {\n        replaceChildren(route.root, route.instance);\n    } else {\n        const result = await route.handler();\n        if ((result as CustomElementConstructor)?.prototype instanceof HTMLElement) {\n            route.construct = result as CustomElementConstructor;\n        } else if (((result as Module)?.default as CustomElementConstructor)?.prototype instanceof HTMLElement) {\n            route.construct = (result as Module).default as CustomElementConstructor;\n        } else {\n            throw new Error('XElement - router handler requires a CustomElementConstructor');\n        }\n\n        if (route.construct.prototype instanceof component) {\n            route.instance = await (route.construct as typeof component).create();\n        } else {\n            route.tag = dash((route.construct as any).tag ?? route.construct.name);\n            define(route.tag, route.construct);\n            route.instance = document.createElement(route.tag);\n        }\n\n        replaceChildren(route.root, route.instance);\n    }\n};\n\nconst navigate = function (event?: any) {\n    if (event && 'canIntercept' in event && event.canIntercept === false) return;\n    if (event && 'canTransition' in event && event.canTransition === false) return;\n\n    const destination = new URL(event?.destination.url ?? location.href);\n    const base = new URL(document.querySelector('base')?.href ?? location.origin);\n\n    base.hash = '';\n    base.search = '';\n    destination.hash = '';\n    destination.search = '';\n\n    const pathname = destination.href.replace(base.href, '/');\n    const transitions: Array<Route> = [];\n\n    for (const route of routes) {\n        if (route.path !== pathname) continue;\n        transitions.push(route);\n    }\n\n    for (const all of alls) {\n        let has = false;\n\n        for (const transition of transitions) {\n            if (transition.root === all.root) {\n                has = true;\n                break;\n            }\n        }\n\n        if (has) continue;\n\n        transitions.push(all);\n    }\n\n    if (event?.intercept) {\n        return event.intercept({ handler: () => transitions.map((route) => transition(route)) });\n    } else if (event?.transitionWhile) {\n        return event.transitionWhile(transitions.map((route) => transition(route)));\n    } else {\n        transitions.map((route) => transition(route));\n    }\n};\n\nconst router = function (path: string, root: Element, handler: Handler) {\n    if (!path) throw new Error('XElement - router path required');\n    if (!handler) throw new Error('XElement - router handler required');\n    if (!root) throw new Error('XElement - router root required');\n\n    if (path === '/*') {\n        for (const all of alls) {\n            if (all.path === path && all.root === root) {\n                throw new Error('XElement - router duplicate path on root');\n            }\n        }\n\n        alls.push({ path, root, handler, });\n    } else {\n        for (const route of routes) {\n            if (route.path === path && route.root === root) {\n                throw new Error('XElement - router duplicate path on root');\n            }\n        }\n\n        routes.push({ path, root, handler, instance: undefined });\n    }\n\n    Reflect.get(window, 'navigation').addEventListener('navigate', navigate);\n};\n\nexport default router;\n", "import Component from './component';\nimport Router from './router';\nimport html from './html';\n\nexport { Component };\nexport { Component as component };\n\nexport { Router };\nexport { Router as router };\n\nexport { html };\n\nexport default {\n\n    Component,\n    component: Component,\n\n    Router,\n    router: Router,\n\n    html,\n\n};\n"],
  "mappings": "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",
  "names": ["define", "name", "constructor", "display", "data", "mark_default", "replaceChildren", "element", "nodes", "node", "includes", "item", "search", "policy", "data", "createHTML", "symbol", "cache", "html", "strings", "expressions", "value", "template", "marker", "mark_default", "data", "length", "index", "createHTML", "filter", "links", "safePattern", "dangerousLink", "data", "removeBetween", "start", "end", "_a", "node", "ElementAction", "source", "target", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "symbol", "l", "i", "fragment", "Render", "oldLength", "newLength", "common", "template", "startChild", "endChild", "action", "removes", "display", "AttributeNameAction", "AttributeValueAction", "includes", "TagAction", "oldElement", "newElement", "attributeNames", "attributeName", "attributeValue", "actions", "marker", "holders", "walker", "startIndex", "endIndex", "tMeta", "names", "name", "value", "dynamicName", "dynamicValue", "aMeta", "render_default", "ContextSet", "method", "target", "key", "value", "receiver", "from", "ContextGet", "t", "_", "a", "ContextDelete", "Context", "data", "context_default", "dash", "data", "adoptedEvent", "adoptingEvent", "upgradedEvent", "upgradingEvent", "creatingEvent", "createdEvent", "renderingEvent", "renderedEvent", "connectedEvent", "connectingEvent", "attributedEvent", "attributingEvent", "disconnectedEvent", "disconnectingEvent", "task", "create", "setup", "update", "_context", "_root", "_marker", "_actions", "_expressions", "_busy", "_restart", "_created", "_c", "Component", "_a", "__privateAdd", "constructor", "mode", "__privateSet", "tag", "dash", "define", "__async", "_b", "instance", "name", "oldValue", "newValue", "attributingEvent", "attributedEvent", "adoptingEvent", "__privateGet", "adoptedEvent", "connectingEvent", "connectedEvent", "disconnectingEvent", "disconnectedEvent", "creatingEvent", "createdEvent", "renderingEvent", "template", "index", "newExpression", "oldExpression", "error", "renderedEvent", "observedProperties", "prototype", "properties", "property", "descriptor", "value", "context_default", "fragment", "render_default", "html", "alls", "routes", "transition", "route", "__async", "_a", "_b", "replaceChildren", "result", "Component", "dash", "define", "navigate", "event", "_c", "destination", "base", "pathname", "transitions", "all", "has", "router", "path", "root", "handler", "router_default", "src_default", "Component", "router_default", "html"]
}
