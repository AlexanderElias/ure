{
  "version": 3,
  "sources": ["../src/schedule.ts", "../src/define.ts", "../src/poly.ts", "../src/html.ts", "../src/display.ts", "../src/observe.ts", "../src/booleans.ts", "../src/render.ts", "../src/router.ts", "../src/index.ts"],
  "sourcesContent": ["let busy = false;\n\nconst sleep = () => new Promise((resolve) => setTimeout(resolve, 0));\n\nconst Actions: any = [];\nconst OldValues: any = [];\nconst NewValues: any = [];\n\nexport default async function schedule(actions: any[], oldValues: any[], newValues: any[]) {\n    actions = actions ?? [];\n    oldValues = oldValues ?? [];\n    newValues = newValues ?? [];\n\n    Actions.push(...actions);\n    OldValues.push(...oldValues);\n    NewValues.push(...newValues);\n\n    if (busy) return;\n    busy = true;\n\n    let action;\n    let oldValue;\n    let newValue;\n    let max = performance.now() + 50;\n\n    while (Actions.length > 0) {\n        if (\n            (navigator as any).scheduling?.isInputPending() ||\n            performance.now() >= max\n        ) {\n            await sleep();\n            max = performance.now() + 50;\n            continue;\n        }\n\n        action = Actions.shift();\n        oldValue = OldValues.shift();\n        newValue = NewValues.shift();\n\n        if (oldValue !== newValue) {\n            await action(oldValue, newValue);\n        }\n    }\n\n    busy = false;\n}\n", "export default function define(name: string, constructor: CustomElementConstructor) {\n    customElements.define(name, constructor);\n}\n", "\nexport const replaceChildren = function (element: Element | Document | DocumentFragment, ...nodes: (Node | string)[]): void {\n\n    while (element.lastChild) {\n        element.removeChild(element.lastChild);\n\n    }\n\n    if (nodes?.length) {\n        for (const node of nodes) {\n            element.appendChild(\n                typeof node === 'string' ?\n                (element.ownerDocument as Document).createTextNode(node) :\n                node\n            );\n        }\n    }\n\n};\n\nexport const includes = function (item: string | Array<any>, search: any) {\n    return item.indexOf(search) !== -1;\n};\n\n\nconst policy = 'trustedTypes' in window ? (window as any).trustedTypes.createPolicy('default', { createHTML: (data:string) => data }) : null;\nexport const createHTML = function (data: string) {\n    if (policy) {\n        return policy.createHTML(data);\n    } else {\n        return data;\n    }\n}", "import { createHTML } from './poly';\n// import parse from './parse';\n\nexport const HtmlCache = new WeakMap();\nexport const HtmlSymbol = Symbol('html');\n\nexport default function html(strings: string[], ...values: unknown[]) {\n    if (HtmlCache.has(strings)) {\n        const template = HtmlCache.get(strings);\n        return { strings, values, template, symbol: HtmlSymbol };\n    } else {\n        let data = '';\n\n        const length = strings.length - 1;\n\n        for (let index = 0; index < length; index++) {\n            data += `${strings[index]}{{${index}}}`;\n        }\n\n        data += strings[length];\n\n        const template = document.createElement('template');\n        template.innerHTML = createHTML(data);\n\n        // const template = parse(data);\n\n        HtmlCache.set(strings, template);\n\n        return { strings, values, template, symbol: HtmlSymbol };\n    }\n}\n", "export default function display(data: any): string {\n    switch (typeof data) {\n        case 'undefined':\n            return '';\n        case 'string':\n            return data;\n        case 'number':\n            return `${data}`;\n        case 'bigint':\n            return `${data}`;\n        case 'boolean':\n            return `${data}`;\n        case 'function':\n            return `${data()}`;\n        case 'symbol':\n            return String(data);\n        case 'object':\n            return JSON.stringify(data);\n        default:\n            throw new Error('display - type not handled');\n    }\n}\n", "export type ObserveValue = any;\nexport type ObserveTarget = any;\nexport type ObserveReceiver = any;\nexport type ObserveMethod = () => void;\nexport type ObserveKey = symbol | string;\nexport type ObserveData = Record<string, any>;\n\nconst ObserveCache = new WeakMap();\nconst ObserveNext = Promise.resolve();\n\nconst ObserveSet = function (method: ObserveMethod, target: ObserveTarget, key: ObserveKey, value: ObserveValue, receiver: ObserveReceiver) {\n    if (typeof key === 'symbol') return Reflect.set(target, key, value, receiver);\n\n    const from = Reflect.get(target, key, receiver);\n\n    if (from === value) return true;\n    if (Number.isNaN(from) && Number.isNaN(value)) return true;\n\n    if (from && (from.constructor.name === 'Object' || from.constructor.name === 'Array' || from.constructor.name === 'Function')) {\n        const cache = ObserveCache.get(from);\n        if (cache === value) return true;\n        ObserveCache.delete(from);\n    }\n\n    Reflect.set(target, key, value, receiver);\n\n    ObserveNext.then(method);\n\n    return true;\n};\n\nconst ObserveGet = function (method: ObserveMethod, target: ObserveTarget, key: ObserveKey, receiver: ObserveReceiver): ObserveValue {\n    if (typeof key === 'symbol') return Reflect.get(target, key, receiver);\n\n    const value = Reflect.get(target, key, receiver);\n\n    if (value && (value.constructor.name === 'Object' || value.constructor.name === 'Array')) {\n        const cache = ObserveCache.get(value);\n        if (cache) return cache;\n\n        const proxy = new Proxy(value, {\n            get: ObserveGet.bind(null, method),\n            set: ObserveSet.bind(null, method),\n            deleteProperty: ObserveDelete.bind(null, method),\n        });\n\n        ObserveCache.set(value, proxy);\n        return proxy;\n    }\n\n    if (value && target.constructor.name === 'Object' && (value.constructor.name === 'Function' || value.constructor.name === 'AsyncFunction')) {\n        const cache = ObserveCache.get(value);\n        if (cache) return cache;\n\n        const proxy = new Proxy(value, {\n            apply(t, _, a) {\n                return Reflect.apply(t, receiver, a);\n            },\n        });\n\n        ObserveCache.set(value, proxy);\n        return proxy;\n    }\n\n    return value;\n};\n\nconst ObserveDelete = function (method: ObserveMethod, target: ObserveTarget, key: ObserveKey) {\n    if (typeof key === 'symbol') return Reflect.deleteProperty(target, key);\n\n    const from = Reflect.get(target, key);\n    ObserveCache.delete(from);\n    Reflect.deleteProperty(target, key);\n\n    ObserveNext.then(method);\n\n    return true;\n};\n\nconst Observe = function (data: ObserveData, method: ObserveMethod) {\n    return new Proxy(data, {\n        get: ObserveGet.bind(null, method),\n        set: ObserveSet.bind(null, method),\n        deleteProperty: ObserveDelete.bind(null, method),\n    });\n};\n\nexport default Observe;\n", "const booleans = [\n    'allowfullscreen',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'compact',\n    'controls',\n    'declare',\n    'default',\n    'defaultchecked',\n    'defaultmuted',\n    'defaultselected',\n    'defer',\n    'disabled',\n    'draggable',\n    'enabled',\n    'formnovalidate',\n    'indeterminate',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nohref',\n    'noshade',\n    'hidden',\n    'novalidate',\n    'nowrap',\n    'open',\n    'pauseonexit',\n    'readonly',\n    'required',\n    'reversed',\n    'scoped',\n    'seamless',\n    'selected',\n    'sortable',\n    'spellcheck',\n    'translate',\n    'truespeed',\n    'typemustmatch',\n    'visible',\n];\n\nexport default booleans;\n", "import html from './html';\nimport display from './display';\nimport observe from './observe';\nimport booleans from './booleans';\nimport { HtmlSymbol } from './html';\nimport { includes, replaceChildren } from './poly';\n\ntype Value = any;\ntype OldValue = Value;\ntype NewValue = Value;\ntype Values = Array<Value>;\ntype Actions = Array<(oldValue: OldValue, newValue: NewValue) => void>;\n\nconst links= [ 'src', 'href', 'xlink:href' ];\nconst safePattern = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i;\n// const dangerousPattern = /j\\s*a\\s*v\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*:|d\\s*a\\s*t\\s*a\\s*:\\s*t\\s*e\\s*x\\s*t\\s*\\/\\s*h\\s*t\\s*m\\s*l/i;\nconst dangerousLink = function (data: string) {\n    return typeof data !== 'string' || !safePattern.test(data);\n    // return typeof data !== 'string' || !safePattern.test(data) || dangerousPattern.test(data);\n};\n\nconst RootCache = new WeakMap();\n\nconst ObjectAction = function (start: Text, end: Text, actions: Actions, oldValue: OldValue, newValue: NewValue) {\n    oldValue = oldValue ?? {};\n    newValue = newValue ?? {};\n\n    if (oldValue?.strings !== newValue.strings) {\n        let next;\n        let node = end.previousSibling;\n        while (node !== start) {\n            next = node?.previousSibling as ChildNode;\n            node?.parentNode?.removeChild(node);\n            node = next;\n        }\n\n        // const fragment = document.importNode(newValue.template.content, true);\n        // RenderWalk(fragment, newValue.values, actions);\n\n        const fragment = newValue.template.content.cloneNode(true);\n        RenderWalk(fragment, newValue.values, actions);\n        document.adoptNode(fragment);\n\n        const l = actions.length;\n        for (let i = 0; i < l; i++) {\n            actions[i](oldValue.values?.[i], newValue.values[i]);\n        }\n\n        end.parentNode?.insertBefore(fragment, end);\n    } else {\n        const l = actions.length;\n        for (let i = 0; i < l; i++) {\n            actions[i](oldValue.values?.[i], newValue.values[i]);\n        }\n    }\n};\n\nconst ArrayAction = function (start: Text, end: Text, actions: Actions, oldValue: OldValue, newValue: NewValue) {\n    oldValue = oldValue ?? [];\n    newValue = newValue ?? [];\n\n    const oldLength = oldValue.length;\n    const newLength = newValue.length;\n    const common = Math.min(oldLength, newLength);\n\n    for (let i = 0; i < common; i++) {\n        actions[i](oldValue[i], newValue[i]);\n    }\n\n    if (oldLength < newLength) {\n        const template = document.createElement('template');\n        for (let i = oldLength; i < newLength; i++) {\n            if (newValue[i]?.constructor === Object && newValue[i]?.symbol === HtmlSymbol) {\n                const start = document.createTextNode('');\n                const end = document.createTextNode('');\n                const action = ObjectAction.bind(null, start, end, []);\n                template.content.appendChild(start);\n                template.content.appendChild(end);\n                actions.push(action);\n                action(oldValue[i], newValue[i]);\n            } else {\n                const node = document.createTextNode('');\n                const action = StandardAction.bind(null, node as Text);\n                template.content.appendChild(node);\n                actions.push(action);\n                action(oldValue[i], newValue[i]);\n            }\n        }\n        end.parentNode?.insertBefore(template.content as Node, end);\n    } else if (oldLength > newLength) {\n        for (let i = oldLength-1; i > newLength-1; i--) {\n            if (oldValue[i]?.constructor === Object && oldValue[i]?.symbol === HtmlSymbol) {\n                const { template } = oldValue[i];\n                let removes = template.content.childNodes.length + 2;\n                while (removes--) end.parentNode?.removeChild(end.previousSibling as Node);\n            } else {\n                end.parentNode?.removeChild(end.previousSibling as Node);\n            }\n        }\n        actions.length = newLength;\n    }\n};\n\nconst StandardAction = function (node: Text, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    node.textContent = newValue;\n};\n\nconst AttributeOn = function (element: Element, attribute: { name: string; value: string }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    if (typeof oldValue === 'function') element.removeEventListener(attribute.name.slice(2), oldValue);\n    if (typeof newValue !== 'function') return console.warn(`XElement - attribute name \"${attribute.name}\" and value \"${newValue}\" not allowed`);\n    element.addEventListener(attribute.name.slice(2), newValue);\n};\n\nconst AttributeBoolean = function (element: Element, attribute: { name: string; value: any }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n\n    const value = newValue ? true : false;\n    if (value) element.setAttribute(attribute.name, '');\n    else element.removeAttribute(attribute.name);\n\n    attribute.value = value;\n    Reflect.set(element, attribute.name, attribute.value);\n};\n\nconst AttributeValue = function (element: Element, attribute: { name: string; value: string }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    const value = display(newValue);\n    attribute.value = value;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeLink = function (element: Element, attribute: { name: string; value: string }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n\n    if (dangerousLink(newValue)) {\n        element.removeAttribute(attribute.name);\n        console.warn(`XElement - attribute name \"${attribute.name}\" and value \"${newValue}\" not allowed`);\n        return;\n    }\n\n    attribute.value = newValue;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeStandard = function (element: Element, attribute: { name: string; value: string }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    attribute.value = newValue;\n    Reflect.set(element, attribute.name, attribute.value);\n    element.setAttribute(attribute.name, attribute.value);\n};\n\nconst AttributeName = function (element: Element, attribute: { name: string; value: string }, oldValue: OldValue, newValue: NewValue) {\n    if (oldValue === newValue) return;\n    element.removeAttribute(oldValue);\n\n    const name = newValue?.toLowerCase();\n\n    if (name === 'value') {\n        attribute.name = name;\n        AttributeValue(element, attribute, attribute.value, attribute.value);\n    } else if (name.startsWith('on')) {\n        console.warn(`XElement - dynamic attribute name \"${newValue}\" not allowed`);\n    } else if (includes(links, name)) {\n        console.warn(`XElement - dynamic attribute name \"${newValue}\" not allowed`);\n    } else if (includes(booleans, name)) {\n        attribute.name = name;\n        AttributeBoolean(element, attribute, attribute.value, attribute.value);\n    } else {\n        attribute.name = name;\n        AttributeStandard(element, attribute, attribute.value, attribute.value);\n    }\n\n    // if (\n    //     typeof newValue !== 'string' ||\n    //     newValue.startsWith('on') ||\n    //     links.includes(newValue)\n    // ) return console.warn(`XElement - dynamic attribute name \"${newValue}\" not allowed`);\n\n    // attribute.name = newValue;\n    // element.setAttribute(attribute.name, attribute.value);\n};\n\nconst RenderWalk = function (fragment: DocumentFragment, values: Values, actions: Actions) {\n    const walker = document.createTreeWalker(document, 5, null);\n\n    walker.currentNode = fragment;\n\n    let index = 0;\n    let node: Node | null = fragment.firstChild;\n\n    while ((node = walker.nextNode()) !== null) {\n        if (node.nodeType === Node.TEXT_NODE) {\n\n            const start = node.nodeValue?.indexOf('{{') ?? -1;\n\n            if (start == -1) continue;\n\n            if (start != 0) {\n                (node as Text).splitText(start);\n                node = walker.nextNode() as Node;\n            }\n\n            const end = node.nodeValue?.indexOf('}}') ?? -1;\n\n            if (end == -1) continue;\n\n            if (end + 2 != node.nodeValue?.length) {\n                (node as Text).splitText(end + 2);\n            }\n\n            const newValue = values[index++];\n\n            if (newValue?.constructor === Object && newValue?.symbol === HtmlSymbol) {\n                const start = document.createTextNode('');\n                const end = node;\n                end.nodeValue = '';\n                end.parentNode?.insertBefore(start, end);\n                actions.push(ObjectAction.bind(null, start as Text, end as Text, []));\n            } else if (newValue?.constructor === Array) {\n                const start = document.createTextNode('');\n                const end = node;\n                end.nodeValue = '';\n                end.parentNode?.insertBefore(start, end);\n                actions.push(ArrayAction.bind(null, start as Text, end as Text, []));\n            } else {\n                (node as Text).textContent = '';\n                actions.push(StandardAction.bind(null, node as Text));\n            }\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n            const names = (node as Element).getAttributeNames();\n            for (const name of names) {\n                const value = (node as Element).getAttribute(name) ?? '';\n                const attribute = { name, value };\n\n                const dynamicName = name.includes('{{') && name.includes('}}');\n                const dynamicValue = value.includes('{{') && value.includes('}}');\n\n                if (dynamicName) {\n                    index++;\n                    (node as Element).removeAttribute(name);\n                    actions.push(\n                        AttributeName.bind(null, node as Element, attribute),\n                    );\n                }\n\n                if (dynamicValue) {\n                    index++;\n                    (node as Element).removeAttribute(name);\n                    if (name === 'value') {\n                        actions.push(\n                            AttributeValue.bind(null, node as Element, attribute),\n                        );\n                    } else if (name.startsWith('on')) {\n                        actions.push(\n                            AttributeOn.bind(null, node as Element, attribute),\n                        );\n                    } else if (includes(links, name)) {\n                        actions.push(\n                            AttributeLink.bind(null, node as Element, attribute),\n                        );\n                    } else if (includes(booleans, name)) {\n                        actions.push(\n                            AttributeBoolean.bind(null, node as Element, attribute),\n                        );\n                    } else {\n                        actions.push(\n                            AttributeStandard.bind(null, node as Element, attribute),\n                        );\n                    }\n                }\n\n                if (!dynamicName && !dynamicValue) {\n                    if (includes(links, name)) {\n                        if (dangerousLink(value)) {\n                            (node as Element).removeAttribute(name);\n                            console.warn(`XElement - attribute name \"${name}\" and value \"${value}\" not allowed`);\n                        }\n                    } else if (name.startsWith('on')) {\n                        (node as Element).removeAttribute(name);\n                        console.warn(`XElement - attribute name \"${name}\" not allowed`);\n                    }\n                }\n\n            }\n        } else {\n            console.warn('node type not handled ', node.nodeType);\n        }\n    }\n};\n\nconst sleep = (time: number) => new Promise((resolve) => setTimeout(resolve, time ?? 0));\n\nconst render = async function (root: Element, context: any, content: any) {\n    const instance: any = {};\n\n    const update = async function () {\n        if (instance.busy) return;\n        else instance.busy = true;\n\n        await sleep(50);\n\n        if (context.upgrade) await context.upgrade()?.catch?.(console.error);\n\n        const { values } = content(html, context);\n\n        const length = instance.actions.length;\n        for (let index = 0; index < length; index++) {\n            instance.actions[index](instance.values[index], values[index]);\n        }\n\n        instance.values = values;\n\n        if (context.upgraded) await context.upgraded()?.catch(console.error);\n\n        instance.busy = false;\n    };\n\n    const cache = RootCache.get(root);\n\n    if (cache && cache.disconnect) await cache.disconnect()?.catch?.(console.error);\n    if (cache && cache.disconnected) await cache.disconnected()?.catch(console.error);\n\n    context = observe(context(html), update);\n\n    RootCache.set(root, context);\n\n    if (context.connect) await context.connect()?.catch?.(console.error);\n    if (context.upgrade) await context.upgrade()?.catch?.(console.error);\n\n    const { strings, values, template } = content(html, context);\n\n    instance.busy = false;\n    instance.actions = [];\n    instance.values = values;\n    instance.strings = strings;\n    instance.template = template;\n    // instance.fragment = document.importNode(template.content, true);\n    instance.fragment = template.content.cloneNode(true);\n\n    RenderWalk(instance.fragment, instance.values, instance.actions);\n\n    document.adoptNode(instance.fragment);\n\n    const length = instance.actions.length;\n    for (let index = 0; index < length; index++) {\n        instance.actions[index](undefined, values[index]);\n    }\n\n    if (root.replaceChildren) {\n        root.replaceChildren(instance.fragment);\n    } else {\n        replaceChildren(root, instance.fragment);\n    }\n\n    if (context.upgraded) await context.upgraded()?.catch(console.error);\n    if (context.connected) await context.connected()?.catch(console.error);\n};\n\nexport default render;\n", "import render from './render';\n\ntype Route = {\n    path?: string;\n\n    render?: any;\n    context?: any;\n    content?: any;\n    construct?: any;\n\n    name?: string;\n    root: Element;\n};\n\nconst alls: Array<Route> = [];\nconst routes: Array<Route> = [];\n\nconst transition = async function (route: Route) {\n    // if (route.cache && route.instance) {\n    //     if (route.instance instanceof Component || route.instance.prototype instanceof Component) {\n    //         route.root.replaceChildren(route.instance);\n    //         await route.instance[$].render();\n    //     } else {\n    //         await route.instance.render();\n    //     }\n    // }\n\n    // if (route.component instanceof Component || route.component.prototype instanceof Component) {\n    //     route.name = route.name ?? Dash(route.component.name);\n\n    //     if (!/^\\w+-\\w+/.test(route.name)) route.name = `x-${route.name}`;\n\n    //     if (!customElements.get(route.name)) customElements.define(route.name, route.component);\n    //     await customElements.whenDefined(route.name);\n\n    //     route.instance = document.createElement(route.name);\n    //     route.root.replaceChildren(route.instance);\n    //     route.instance[$].render();\n\n    // }\n    // if (route.render) {\n    //     route.render();\n    // } else {\n    // route.render = await mount(route.root, route.context, route.content);\n    // }\n    await render(route.root, route.context, route.content);\n};\n\nconst navigate = function (event?: any) {\n    if (event && 'canIntercept' in event && event.canIntercept === false) return;\n    if (event && 'canTransition' in event && event.canTransition === false) return;\n\n    const destination = new URL(event?.destination.url ?? location.href);\n    const base = new URL(document.querySelector('base')?.href ?? location.origin);\n\n    base.hash = '';\n    base.search = '';\n    destination.hash = '';\n    destination.search = '';\n\n    const pathname = destination.href.replace(base.href, '/');\n    const transitions: Array<Route> = [];\n\n    for (const route of routes) {\n        if (route.path !== pathname) continue;\n        if (!route.root) continue;\n\n        // const current = Reflect.get(route.root, 'xRouterCurrent');\n        // if (current === route) continue;\n\n        // const busy = Reflect.get(route.root, 'xRouterBusy');\n        // if (busy) continue;\n\n        // if (Reflect.get(route.root, 'xRouterPath') === route.path) continue;\n\n        // const current = Reflect.get(route.root, 'xRouterCurrent');\n        // if (current) current.instance.childNodes = Array.from(current.root.childNodes);\n\n        // Reflect.set(route.root, 'xRouterBusy', true);\n        Reflect.set(route.root, 'xRouterPath', route.path);\n        transitions.push(route);\n    }\n\n    for (const all of alls) {\n        if (!all.root) continue;\n        let has = false;\n\n        for (const transition of transitions) {\n            if (transition.root === all.root) {\n                has = true;\n                break;\n            }\n        }\n\n        if (has) continue;\n        if (Reflect.get(all.root, 'xRouterPath') === pathname) continue;\n        // if (all.root && Reflect.get(all.root, 'xRouterBusy')) continue;\n        // if (all.root) Reflect.set(all.root, 'xRouterBusy', true);\n\n        transitions.push(all);\n    }\n\n    // if (!transitions.length) return;\n\n    if (event?.intercept) {\n        return event.intercept({ handler: () => transitions.map((route) => transition(route)) });\n    } else if (event?.transitionWhile) {\n        return event.transitionWhile(transitions.map((route) => transition(route)));\n    } else {\n        transitions.map((route) => transition(route));\n    }\n};\n\nconst router = function (path: string, root: Element, context: any, content: any) {\n    if (!path) throw new Error('XElement - router path required');\n    if (!root) throw new Error('XElement - router root required');\n    if (!context) throw new Error('XElement - router context required');\n    if (!content) throw new Error('XElement - router content required');\n\n    if (path === '/*') {\n        for (const all of alls) {\n            if (all.path === path && all.root === root) {\n                throw new Error('XElement - router duplicate path on root');\n            }\n        }\n\n        alls.push({ path, root, context, content });\n    } else {\n        for (const route of routes) {\n            if (route.path === path && route.root === root) {\n                throw new Error('XElement - router duplicate path on root');\n            }\n        }\n\n        routes.push({ path, root, context, content });\n    }\n\n    Reflect.get(window, 'navigation').addEventListener('navigate', navigate);\n};\n\nexport default router;\n", "// import Component from './component';\nimport Schedule from './schedule';\n// import Context from './context';\nimport Define from './define';\nimport Router from './router';\nimport Render from './render';\n// import Patch from './patch';\n// import Mount from './mount';\n\n// export { Component };\n// export { Component as component };\n\nexport { Schedule };\nexport { Schedule as schedule };\n\n// export { Context };\n// export { Context as context };\n\nexport { Define };\nexport { Define as define };\n\nexport { Router };\nexport { Router as router };\n\nexport { Render };\nexport { Render as render };\n\n// export { Patch };\n// export { Patch as patch };\n\n// export { Mount };\n// export { Mount as mount };\n\nconst Index = {\n    // Component,\n    Schedule,\n    // Context,\n    Define,\n    Router,\n    Render,\n    // Patch,\n    // Mount,\n    // component: Component,\n    schedule: Schedule,\n    // context: Context,\n    define: Define,\n    router: Router,\n    render: Render,\n    // patch: Patch,\n    // mount: Mount,\n};\n\nexport default Index;\n"],
  "mappings": "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",
  "names": ["busy", "sleep", "resolve", "Actions", "OldValues", "NewValues", "schedule", "actions", "oldValues", "newValues", "__async", "_a", "action", "oldValue", "newValue", "max", "define", "name", "constructor", "replaceChildren", "element", "nodes", "node", "includes", "item", "search", "policy", "data", "createHTML", "HtmlCache", "HtmlSymbol", "html", "strings", "values", "template", "data", "length", "index", "createHTML", "display", "data", "ObserveCache", "ObserveNext", "ObserveSet", "method", "target", "key", "value", "receiver", "from", "ObserveGet", "cache", "proxy", "ObserveDelete", "t", "_", "a", "Observe", "data", "observe_default", "booleans", "booleans_default", "links", "safePattern", "dangerousLink", "data", "RootCache", "ObjectAction", "start", "end", "actions", "oldValue", "newValue", "_a", "_b", "_c", "_d", "next", "node", "fragment", "RenderWalk", "l", "i", "ArrayAction", "_e", "_f", "_g", "oldLength", "newLength", "common", "template", "HtmlSymbol", "action", "StandardAction", "removes", "AttributeOn", "element", "attribute", "AttributeBoolean", "value", "AttributeValue", "display", "AttributeLink", "AttributeStandard", "AttributeName", "name", "includes", "booleans_default", "values", "_h", "walker", "index", "names", "dynamicName", "dynamicValue", "sleep", "time", "resolve", "render", "root", "context", "content", "__async", "_i", "instance", "update", "html", "length", "cache", "observe_default", "strings", "replaceChildren", "render_default", "alls", "routes", "transition", "route", "__async", "render_default", "navigate", "event", "_a", "_b", "_c", "destination", "base", "pathname", "transitions", "all", "has", "router", "path", "root", "context", "content", "router_default", "Index", "schedule", "define", "router_default", "render_default", "src_default"]
}
